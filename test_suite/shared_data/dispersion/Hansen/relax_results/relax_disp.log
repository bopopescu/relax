


                                  relax repository checkout r20422
                     svn+ssh://bugman@svn.gna.org/svn/relax/branches/relax_disp

                              Molecular dynamics by NMR data analysis

                             Copyright (C) 2001-2006 Edward d'Auvergne
                         Copyright (C) 2006-2013 the relax development team

This is free software which you are welcome to modify and redistribute under the conditions of the
GNU General Public License (GPL).  This program, including all modules, is licensed under the GPL
and comes with absolutely no warranty.  For details type 'GPL' within the relax prompt.

Assistance in using the relax prompt and scripting interface can be accessed by typing 'help' within
the prompt.

Processor fabric:  Uni-processor.

script = 'relax_disp.py'
----------------------------------------------------------------------------------------------------
"""Script for CPMG relaxation dispersion curve fitting using Dr. Flemming Hansen's data from http://dx.doi.org/10.1021/jp074793o.

To run:

$ ../../../../../relax --tee relax_disp.log relax_disp.py
"""


# Python module imports.
from os import sep

# relax module imports.
from auto_analyses.relax_disp import Relax_disp
from data_store import Relax_data_store; ds = Relax_data_store()
from status import Status; status = Status()


# The dispersion models.
MODELS = ['No Rex', 'LM63', 'LM63 3-site', 'CR72', 'IT99']

# The grid search size (the number of increments per dimension).
GRID_INC = 11

# The number of Monte Carlo simulations to be used for error analysis at the end of the analysis.
MC_NUM = 50



# Create the data pipe.
pipe_name = 'base pipe'
pipe_bundle = 'relax_disp'
pipe.create(pipe_name=pipe_name, bundle=pipe_bundle, pipe_type='relax_disp')

# The path to the data files.
data_path = status.install_path + sep+'test_suite'+sep+'shared_data'+sep+'dispersion'+sep+'Hansen'

# Load the saved base pipe
results.read(data_path+sep+'base_pipe')

# Set the nuclear isotope data.
spin.isotope('15N')

# Create the R2eff data pipe and load the results.
pipe.create(pipe_name='R2eff', bundle=pipe_bundle, pipe_type='relax_disp')
pipe.switch(pipe_name='R2eff')
results.read(data_path+sep+'r2eff_pipe')


# Auto-analysis execution.
##########################

# Do not change!
Relax_disp(pipe_name=pipe_name, pipe_bundle=pipe_bundle, models=MODELS, grid_inc=GRID_INC, mc_sim_num=MC_NUM)
----------------------------------------------------------------------------------------------------

relax> pipe.create(pipe_name='base pipe', pipe_type='relax_disp', bundle='relax_disp')

relax> results.read(file='/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/base_pipe', dir=None)
Opening the file '/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/base_pipe.bz2' for reading.

relax> spin.isotope(isotope='15N', spin_id=None, force=False)

relax> pipe.create(pipe_name='R2eff', pipe_type='relax_disp', bundle='relax_disp')

relax> pipe.switch(pipe_name='R2eff')

relax> results.read(file='/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/r2eff_pipe', dir=None)
Opening the file '/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/r2eff_pipe.bz2' for reading.




=======================================
= Relaxation dispersion auto-analysis =
=======================================


relax> spectrum.error_analysis(subset=['500_reference.in', '500_66.667.in', '500_133.33.in', '500_133.33.in.bis', '500_200.in', '500_266.67.in', '500_333.33.in', '500_400.in', '500_466.67.in', '500_533.33.in', '500_533.33.in.bis', '500_600.in', '500_666.67.in', '500_733.33.in', '500_800.in', '500_866.67.in', '500_933.33.in', '500_933.33.in.bis', '500_1000.in'])
Intensity measure:  Peak heights.
Replicated spectra:  Yes.
All spectra replicated:  No.

Variance averaging over all spectra.
Standard deviation for all spins:  275.5589639492646

relax> spectrum.error_analysis(subset=['800_reference.in', '800_66.667.in', '800_133.33.in', '800_133.33.in.bis', '800_200.in', '800_266.67.in', '800_333.33.in', '800_400.in', '800_466.67.in', '800_533.33.in', '800_533.33.in.bis', '800_600.in', '800_666.67.in', '800_733.33.in', '800_800.in', '800_866.67.in', '800_933.33.in', '800_933.33.in.bis', '800_1000.in'])
Intensity measure:  Peak heights.
Replicated spectra:  Yes.
All spectra replicated:  No.

Variance averaging over all spectra.
Standard deviation for all spins:  282.10831679853857



----------------------
- The 'No Rex' model -
----------------------

Detected the presence of results files for the 'No Rex' model - loading these instead of performing optimisation for a second time.

relax> pipe.create(pipe_name='No Rex', pipe_type='relax_disp', bundle='relax_disp')

relax> pipe.switch(pipe_name='No Rex')

relax> results.read(file='results', dir='/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/No Rex')
Opening the file '/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/No Rex/results.bz2' for reading.



--------------------
- The 'LM63' model -
--------------------

Detected the presence of results files for the 'LM63' model - loading these instead of performing optimisation for a second time.

relax> pipe.create(pipe_name='LM63', pipe_type='relax_disp', bundle='relax_disp')

relax> pipe.switch(pipe_name='LM63')

relax> results.read(file='results', dir='/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/LM63')
Opening the file '/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/LM63/results.bz2' for reading.



---------------------------
- The 'LM63 3-site' model -
---------------------------


relax> pipe.copy(pipe_from='base pipe', pipe_to='LM63 3-site', bundle_to='relax_disp')

relax> pipe.switch(pipe_name='LM63 3-site')

relax> relax_disp.select_model(model='LM63 3-site')
The Luz and Meiboom (1963) 3-site fast exchange model.

relax> value.copy(pipe_from='R2eff', pipe_to='LM63 3-site', param='r2eff')

relax> grid_search(lower=None, upper=None, inc=11, constraints=True, verbosity=1)


Fitting to the spin block [':70@N']
-----------------------------------

Unconstrained grid search size: 1771561 (constraints may decrease this size).


Grid search
~~~~~~~~~~~

Searching through 1771561 grid nodes.
k: 0        xk: [            0.1,             0.1,               0,               0,          0.0001,          0.0001]    fk: 72021.7966377       
k: 1        xk: [           0.49,             0.1,               0,               0,          0.0001,          0.0001]    fk: 69106.5233624       
k: 2        xk: [           0.88,             0.1,               0,               0,          0.0001,          0.0001]    fk: 67684.7576037       
k: 11       xk: [            0.1,            0.49,               0,               0,          0.0001,          0.0001]    fk: 43250.8434503       
k: 12       xk: [           0.49,            0.49,               0,               0,          0.0001,          0.0001]    fk: 40335.5701751       
k: 13       xk: [           0.88,            0.49,               0,               0,          0.0001,          0.0001]    fk: 38913.8044163       
k: 22       xk: [            0.1,            0.88,               0,               0,          0.0001,          0.0001]    fk: 22986.2996385       
k: 23       xk: [           0.49,            0.88,               0,               0,          0.0001,          0.0001]    fk: 20071.0263633       
k: 24       xk: [           0.88,            0.88,               0,               0,          0.0001,          0.0001]    fk: 18649.2606045       
k: 33       xk: [            0.1,            1.27,               0,               0,          0.0001,          0.0001]    fk: 11228.1652023       
k: 34       xk: [           0.49,            1.27,               0,               0,          0.0001,          0.0001]    fk: 8312.89192706       
k: 35       xk: [           0.88,            1.27,               0,               0,          0.0001,          0.0001]    fk: 6891.12616832       
k: 45       xk: [           0.49,            1.66,               0,               0,          0.0001,          0.0001]    fk: 5061.16686639       
k: 46       xk: [           0.88,            1.66,               0,               0,          0.0001,          0.0001]    fk: 3639.40110765       
k: 29414    xk: [            0.1,            0.49,               1,               0,         2.00008,          0.0001]    fk: 3409.84868699       
k: 29415    xk: [           0.49,            0.49,               1,               0,         2.00008,          0.0001]    fk: 2220.14538464       
k: 411401   xk: [           0.49,             0.1,               1,               1,         6.00004,         2.00008]    fk: 2099.44951036       
k: 426042   xk: [           0.49,             0.1,               1,               1,         7.00003,         2.00008]    fk: 2048.17637843       
k: 1158092  xk: [           0.49,             0.1,               1,               1,         2.00008,         7.00003]    fk: 2048.17637843       

Optimised parameter values:
r2 (500.000 MHz):            4.900000000000000
r2 (800.000 MHz):            1.000000000000000
phi_ex_B:                    1.000000000000000
phi_ex_C:                    1.000000000000000
kB:                      20000.799999999999272
kC:                      70000.300000000002910


Fitting to the spin block [':71@N']
-----------------------------------

Unconstrained grid search size: 1771561 (constraints may decrease this size).


Grid search
~~~~~~~~~~~

Searching through 1771561 grid nodes.
k: 0        xk: [            0.1,             0.1,               0,               0,          0.0001,          0.0001]    fk: 3215.70669559       
k: 1        xk: [           0.49,             0.1,               0,               0,          0.0001,          0.0001]    fk: 164.788885002       
k: 29403    xk: [            0.1,             0.1,               1,               0,         2.00008,          0.0001]    fk: 27.2883386472       
k: 572451   xk: [            0.1,             0.1,               1,               1,         6.00004,         3.00007]    fk: 26.8600217477       
k: 1011681  xk: [            0.1,             0.1,               1,               1,         3.00007,         6.00004]    fk: 26.8600217477       

Optimised parameter values:
r2 (500.000 MHz):            1.000000000000000
r2 (800.000 MHz):            1.000000000000000
phi_ex_B:                    1.000000000000000
phi_ex_C:                    1.000000000000000
kB:                      30000.700000000004366
kC:                      60000.400000000001455

relax> minimise(min_algor='simplex', line_search=None, hessian_mod=None, hessian_type=None, func_tol=1e-25, grad_tol=None, max_iter=10000000, constraints=True, scaling=True, verbosity=1)


Fitting to the spin block [':70@N']
-----------------------------------



Logarithmic barrier function
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
k: 0        xk: [           0.49,             0.1,               1,               1,         2.00008,         7.00003]    fk: 2048.17637843       
Entering sub-algorithm.
	
	Simplex minimisation
	~~~~~~~~~~~~~~~~~~~~

	k: 0        xk: [           0.49,           0.105,               1,               1,         2.00008,         7.00003]    fk: 2047.27273448       
	k: 100      xk: [   0.7596894518,    0.0628798134,    0.7355177953,    0.2074626401,    0.9706934881,     11.78422163]    fk: 938.579040835       
	k: 200      xk: [   0.6776351112,    0.0306622612,    0.7043779802,   0.03962685596,    0.8754289294,     2.173815602]    fk: 551.105860952       
	k: 300      xk: [   0.5794819893,   0.03752179901,    0.7847023539,  0.006470800057,    0.9524867799,    0.1530539579]    fk: 253.86060664        
	k: 400      xk: [   0.4442621365,   0.06322788098,    0.9268578139,  0.002201766127,     1.122967984,   0.07520924639]    fk: 151.896009775       

	Parameter values: [0.444301713934945, 0.06322881516054496, 0.92683672290089092, 0.0022847863070956254, 1.1229846979910567, 0.076350928102761673]
	Function value:   151.87690804206696
	Iterations:       500
	Function calls:   797
	Gradient calls:   0
	Hessian calls:    0
	Warning:          Maximum number of iterations reached

k: 1        xk: [   0.4443017139,   0.06322881516,    0.9268367229,  0.002284786307,     1.122984698,    0.0763509281]    fk: 151.920625043       
Entering sub-algorithm.
	
	Simplex minimisation
	~~~~~~~~~~~~~~~~~~~~

	k: 0        xk: [   0.4443017139,   0.06322881516,    0.9268367229,  0.002284786307,     1.122984698,    0.0763509281]    fk: 151.920174234       
	k: 100      xk: [   0.4444217743,   0.06377861069,    0.9272185478,  0.002296742079,     1.123863825,   0.07646448307]    fk: 151.920118933       
	k: 200      xk: [   0.4461982488,   0.06832560559,    0.9303596313,   0.00239905449,     1.131365783,   0.07743821288]    fk: 151.920105141       
	k: 300      xk: [    0.447951086,   0.07281557787,    0.9333720476,  0.002501526618,     1.138712315,   0.07838913448]    fk: 151.920091983       
	k: 400      xk: [   0.4499779267,   0.07800848057,    0.9370091979,  0.002626551372,      1.14751663,   0.07952507847]    fk: 151.920078057       

	Parameter values: [0.45170314555129076, 0.082415429705235022, 0.9401939540277684, 0.0027379606338658428, 1.1551996211587467, 0.080513440733083808]
	Function value:   151.92006531622673
	Iterations:       500
	Function calls:   805
	Gradient calls:   0
	Hessian calls:    0
	Warning:          Maximum number of iterations reached

k: 2        xk: [   0.4517031456,   0.08241542971,     0.940193954,  0.002737960634,     1.155199621,   0.08051344073]    fk: 151.920558011       
Entering sub-algorithm.
	
	Simplex minimisation
	~~~~~~~~~~~~~~~~~~~~

	k: 0        xk: [   0.4517031456,   0.08241542971,     0.940193954,  0.002737960634,     1.155199621,   0.08051344073]    fk: 151.920553084       
	k: 100      xk: [   0.4518112746,   0.08269023953,    0.9403299727,  0.002743894831,     1.155587117,   0.08056418754]    fk: 151.920552674       
	k: 200      xk: [   0.4521011417,   0.08343241253,    0.9406948607,  0.002759916565,     1.156640584,   0.08070267498]    fk: 151.920552656       
	k: 300      xk: [   0.4526820467,   0.08491899344,    0.9414154682,  0.002792387369,     1.158744187,   0.08098387514]    fk: 151.920552618       
	k: 400      xk: [   0.4532801328,   0.08645134714,     0.942153308,  0.002826656006,      1.16091682,   0.08128139876]    fk: 151.920552583       

	Parameter values: [0.45372908693986447, 0.087600050587461009, 0.94270130565634647, 0.0028528202609106714, 1.1625464503419627, 0.08150899697154583]
	Function value:   151.9205525534997
	Iterations:       500
	Function calls:   803
	Gradient calls:   0
	Hessian calls:    0
	Warning:          Maximum number of iterations reached

k: 3        xk: [   0.4537290869,   0.08760005059,    0.9427013057,  0.002852820261,      1.16254645,   0.08150899697]    fk: 151.920557608       
Entering sub-algorithm.
	
	Simplex minimisation
	~~~~~~~~~~~~~~~~~~~~

	k: 0        xk: [   0.4537290869,   0.08760005059,    0.9427013057,  0.002852820261,      1.16254645,   0.08150899697]    fk: 151.920557557       
	k: 100      xk: [   0.4538333602,   0.08786646375,    0.9426983403,   0.00285788545,     1.162748841,   0.08155807203]    fk: 151.920557556       
	k: 200      xk: [   0.4539409434,   0.08814178818,     0.942694972,  0.002863115094,     1.162957481,   0.08160865716]    fk: 151.920557555       
	k: 300      xk: [   0.4540972417,   0.08854186974,    0.9426906399,  0.002870721642,     1.163261534,   0.08168208412]    fk: 151.920557555       
	k: 400      xk: [   0.4542198484,   0.08885578554,    0.9426886336,  0.002876708575,     1.163502145,   0.08173971297]    fk: 151.920557555       

	Parameter values: [0.45435002869736407, 0.089189033965041936, 0.94268666953408986, 0.0028830695318034297, 1.1637579019338307, 0.081800827780918683]
	Function value:   151.92055755518106
	Iterations:       500
	Function calls:   803
	Gradient calls:   0
	Hessian calls:    0
	Warning:          Maximum number of iterations reached

k: 4        xk: [   0.4543500287,   0.08918903397,    0.9426866695,  0.002883069532,     1.163757902,   0.08180082778]    fk: 151.920557606       
Entering sub-algorithm.
	
	Simplex minimisation
	~~~~~~~~~~~~~~~~~~~~

	k: 0        xk: [   0.4543500287,   0.08918903397,    0.9426866695,  0.002883069532,     1.163757902,   0.08180082778]    fk: 151.920557606       
	k: 100      xk: [   0.4543500287,   0.08918903397,    0.9426866695,  0.002883069532,     1.163757902,   0.08180082778]    fk: 151.920557606       
	k: 200      xk: [   0.4543792068,   0.08926373755,    0.9427234894,  0.002884294809,     1.163861095,   0.08180907101]    fk: 151.920557606       

	Parameter values: [0.4543792068277635, 0.08926373754505082, 0.94272348940892337, 0.0028842948085239439, 1.1638610954157045, 0.081809071013871415]
	Function value:   151.92055760555598
	Iterations:       286
	Function calls:   681
	Gradient calls:   0
	Hessian calls:    0
	Warning:          Simplex has not moved.

k: 5        xk: [   0.4543792068,   0.08926373755,    0.9427234894,  0.002884294809,     1.163861095,   0.08180907101]    fk: 151.920557606       
Entering sub-algorithm.
	
	Simplex minimisation
	~~~~~~~~~~~~~~~~~~~~

	k: 0        xk: [   0.4543792068,   0.08926373755,    0.9427234894,  0.002884294809,     1.163861095,   0.08180907101]    fk: 151.920557606       
	k: 100      xk: [   0.4543792068,   0.08926373755,    0.9427234894,  0.002884294809,     1.163861095,   0.08180907101]    fk: 151.920557606       
	k: 200      xk: [   0.4543791985,     0.089263716,    0.9427234787,  0.002884294453,     1.163861066,   0.08180906862]    fk: 151.920557606       

	Parameter values: [0.45437919851218189, 0.089263716000817228, 0.94272347870415374, 0.0028842944527482438, 1.1638610655149797, 0.081809068623653752]
	Function value:   151.9205576060599
	Iterations:       273
	Function calls:   693
	Gradient calls:   0
	Hessian calls:    0
	Warning:          Simplex has not moved.

k: 6        xk: [   0.4543791985,     0.089263716,    0.9427234787,  0.002884294453,     1.163861066,   0.08180906862]    fk: 151.920557606       
Entering sub-algorithm.
	
	Simplex minimisation
	~~~~~~~~~~~~~~~~~~~~

	k: 0        xk: [   0.4543791985,     0.089263716,    0.9427234787,  0.002884294453,     1.163861066,   0.08180906862]    fk: 151.920557606       
	k: 100      xk: [   0.4543791985,     0.089263716,    0.9427234787,  0.002884294453,     1.163861066,   0.08180906862]    fk: 151.920557606       
	k: 200      xk: [   0.4543791985,     0.089263716,    0.9427234787,  0.002884294453,     1.163861066,   0.08180906862]    fk: 151.920557606       

	Parameter values: [0.45437919851218189, 0.089263716000817228, 0.94272347870415374, 0.0028842944527482438, 1.1638610655149797, 0.081809068623653752]
	Function value:   151.9205576060649
	Iterations:       258
	Function calls:   663
	Gradient calls:   0
	Hessian calls:    0
	Warning:          Simplex has not moved.

k: 7        xk: [   0.4543791985,     0.089263716,    0.9427234787,  0.002884294453,     1.163861066,   0.08180906862]    fk: 151.920557606       
Entering sub-algorithm.
	
	Simplex minimisation
	~~~~~~~~~~~~~~~~~~~~

	k: 0        xk: [   0.4543791985,     0.089263716,    0.9427234787,  0.002884294453,     1.163861066,   0.08180906862]    fk: 151.920557606       
	k: 100      xk: [   0.4543791985,     0.089263716,    0.9427234787,  0.002884294453,     1.163861066,   0.08180906862]    fk: 151.920557606       
	k: 200      xk: [   0.4543791985,     0.089263716,    0.9427234787,  0.002884294453,     1.163861066,   0.08180906862]    fk: 151.920557606       

	Parameter values: [0.45437919851218189, 0.089263716000817228, 0.94272347870415374, 0.0028842944527482438, 1.1638610655149797, 0.081809068623653752]
	Function value:   151.92055760606496
	Iterations:       258
	Function calls:   663
	Gradient calls:   0
	Hessian calls:    0
	Warning:          Simplex has not moved.

k: 8        xk: [   0.4543791985,     0.089263716,    0.9427234787,  0.002884294453,     1.163861066,   0.08180906862]    fk: 151.920557606       
Entering sub-algorithm.
	
	Simplex minimisation
	~~~~~~~~~~~~~~~~~~~~

	k: 0        xk: [   0.4543791985,     0.089263716,    0.9427234787,  0.002884294453,     1.163861066,   0.08180906862]    fk: 151.920557606       
	k: 100      xk: [   0.4543791985,     0.089263716,    0.9427234787,  0.002884294453,     1.163861066,   0.08180906862]    fk: 151.920557606       
	k: 200      xk: [   0.4543791985,     0.089263716,    0.9427234787,  0.002884294453,     1.163861066,   0.08180906862]    fk: 151.920557606       

	Parameter values: [0.45437919851218189, 0.089263716000817228, 0.94272347870415374, 0.0028842944527482438, 1.1638610655149797, 0.081809068623653752]
	Function value:   151.92055760606496
	Iterations:       258
	Function calls:   663
	Gradient calls:   0
	Hessian calls:    0
	Warning:          Simplex has not moved.


Parameter values: [0.45437919851218189, 0.089263716000817228, 0.94272347870415374, 0.0028842944527482438, 1.1638610655149797, 0.081809068623653752]
Function value:   151.92055760606496
Iterations:       3333
Function calls:   6571
Gradient calls:   0
Hessian calls:    0
Warning:          None


Optimised parameter values:
r2 (500.000 MHz):            4.543791985121819
r2 (800.000 MHz):            0.892637160008172
phi_ex_B:                    0.942723478704154
phi_ex_C:                    0.002884294452748
kB:                      11638.610655149797822
kC:                        818.090686236537522


Fitting to the spin block [':71@N']
-----------------------------------



Logarithmic barrier function
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
k: 0        xk: [            0.1,             0.1,               1,               1,         3.00007,         6.00004]    fk: 26.8600217477       
Entering sub-algorithm.
	
	Simplex minimisation
	~~~~~~~~~~~~~~~~~~~~

	k: 0        xk: [            0.1,             0.1,               1,            1.05,         3.00007,         6.00004]    fk: 26.1152447615       
	k: 100      xk: [  0.05969027339,    0.1869323022,     0.795654999,    0.0733134769,     1.309622673,     8.929962477]    fk: 5.62226885799       
	k: 200      xk: [  0.03345349955,    0.1830992119,    0.7634675987,     0.458336308,     1.282503398,     9.703010223]    fk: 5.60568843089       
	k: 300      xk: [  0.03997665114,    0.1748043666,    0.7127783024,    0.5639267147,     1.241754214,     9.064727656]    fk: 5.60390406077       
	k: 400      xk: [  0.05030075673,    0.1609710516,    0.6172308904,    0.7560244501,     1.161553113,      7.98584655]    fk: 5.6027726981        

	Parameter values: [0.050803673161896268, 0.16054727280699077, 0.61398002111533856, 0.7600722643009461, 1.1586668810054892, 7.9447971223446814]
	Function value:   5.6027711116577983
	Iterations:       500
	Function calls:   792
	Gradient calls:   0
	Hessian calls:    0
	Warning:          Maximum number of iterations reached

k: 1        xk: [  0.05080367316,    0.1605472728,    0.6139800211,    0.7600722643,     1.158666881,     7.944797122]    fk: 5.73456961819       
Entering sub-algorithm.
	
	Simplex minimisation
	~~~~~~~~~~~~~~~~~~~~

	k: 0        xk: [  0.05080367316,    0.1685746364,    0.6139800211,    0.7600722643,     1.158666881,     7.944797122]    fk: 5.73324679458       
	k: 100      xk: [  0.05107185792,     2.060995348,    0.6099569042,    0.7844315814,     1.154740936,     8.076406929]    fk: 5.7330081017        
	k: 200      xk: [  0.05247386127,      10.1151352,    0.5948392406,    0.8892741226,     1.139990671,     8.705854079]    fk: 5.73288250917       
	k: 300      xk: [  0.06774918532,     10.15987163,    0.5582436319,     1.028051189,     1.102613519,      10.0222758]    fk: 5.73284042692       
	k: 400      xk: [  0.08180825658,     9.054048817,    0.5272115808,     1.165147984,     1.069884527,     11.39257368]    fk: 5.73280728641       

	Parameter values: [0.10011765106182896, 8.4725542714700595, 0.4887618030584937, 1.3708472823735254, 1.0285601243910287, 13.465112635729096]
	Function value:   5.7327691617019871
	Iterations:       500
	Function calls:   788
	Gradient calls:   0
	Hessian calls:    0
	Warning:          Maximum number of iterations reached

k: 2        xk: [   0.1001176511,     8.472554271,    0.4887618031,     1.370847282,     1.028560124,     13.46511264]    fk: 5.73457886147       
Entering sub-algorithm.
	
	Simplex minimisation
	~~~~~~~~~~~~~~~~~~~~

	k: 0        xk: [   0.1001176511,     8.896181985,    0.4887618031,     1.370847282,     1.028560124,     13.46511264]    fk: 5.73455317569       
	k: 100      xk: [   0.1001560838,     8.705493404,    0.4888724377,     1.371234456,     1.028757386,     13.47693308]    fk: 5.73454989726       
	k: 200      xk: [   0.1002182446,     10.04147295,    0.4891760428,     1.369296875,     1.029052291,      13.4870597]    fk: 5.73454987954       
	k: 300      xk: [   0.1004559993,     10.00504417,    0.4896292672,     1.365680512,     1.029471455,     13.51544679]    fk: 5.73454987688       
	k: 400      xk: [   0.1011763079,     9.923335003,    0.4909642852,     1.354546944,     1.030704369,     13.59851468]    fk: 5.73454986873       

	Parameter values: [0.10184191314480526, 10.008569417609273, 0.49216134047291749, 1.3439856564707457, 1.0318114871499056, 13.67167935466928]
	Function value:   5.7345498609436829
	Iterations:       500
	Function calls:   796
	Gradient calls:   0
	Hessian calls:    0
	Warning:          Maximum number of iterations reached

k: 3        xk: [   0.1018419131,     10.00856942,    0.4921613405,     1.343985656,     1.031811487,     13.67167935]    fk: 5.73456792658       
Entering sub-algorithm.
	
	Simplex minimisation
	~~~~~~~~~~~~~~~~~~~~

	k: 0        xk: [   0.1018419131,     10.00856942,    0.4921613405,     1.343985656,     1.031811487,     13.67167935]    fk: 5.73456774574       
	k: 100      xk: [   0.1018517364,     10.09913182,     0.492167591,     1.343840118,     1.031816192,     13.67206308]    fk: 5.73456774564       
	k: 200      xk: [   0.1018534264,      9.99880139,    0.4921686187,     1.343815625,        1.031817,     13.67213028]    fk: 5.73456774564       

	Parameter values: [0.1018534263838697, 9.9988012907031045, 0.49216861866451705, 1.3438156252050524, 1.0318169995259385, 13.672130284195532]
	Function value:   5.7345677456364257
	Iterations:       283
	Function calls:   719
	Gradient calls:   0
	Hessian calls:    0
	Warning:          Simplex has not moved.

k: 4        xk: [   0.1018534264,     9.998801291,    0.4921686187,     1.343815625,        1.031817,     13.67213028]    fk: 5.73456792629       
Entering sub-algorithm.
	
	Simplex minimisation
	~~~~~~~~~~~~~~~~~~~~

	k: 0        xk: [   0.1018534264,     9.998801291,    0.4921686187,     1.343815625,        1.031817,     13.67213028]    fk: 5.73456792448       
	k: 100      xk: [   0.1018534264,     9.998801291,    0.4921686187,     1.343815625,        1.031817,     13.67213028]    fk: 5.73456792448       
	k: 200      xk: [   0.1018534264,     9.998801291,    0.4921686187,     1.343815625,        1.031817,     13.67213028]    fk: 5.73456792448       

	Parameter values: [0.10185342638386866, 9.9988012906982213, 0.49216861866451644, 1.343815625205067, 1.0318169995259381, 13.672130284195488]
	Function value:   5.7345679244847663
	Iterations:       278
	Function calls:   687
	Gradient calls:   0
	Hessian calls:    0
	Warning:          Simplex has not moved.

k: 5        xk: [   0.1018534264,     9.998801291,    0.4921686187,     1.343815625,        1.031817,     13.67213028]    fk: 5.73456792629       
Entering sub-algorithm.
	
	Simplex minimisation
	~~~~~~~~~~~~~~~~~~~~

	k: 0        xk: [   0.1018534264,     9.998801291,    0.4921686187,     1.343815625,        1.031817,     13.67213028]    fk: 5.73456792627       
	k: 100      xk: [   0.1018534264,     9.998801291,    0.4921686187,     1.343815625,        1.031817,     13.67213028]    fk: 5.73456792627       
	k: 200      xk: [   0.1018534264,     9.998803198,    0.4921686187,     1.343815625,        1.031817,     13.67213028]    fk: 5.73456792627       

	Parameter values: [0.10185342638321868, 9.998803197828817, 0.49216861866409689, 1.3438156252143161, 1.0318169995255779, 13.672130284166634]
	Function value:   5.7345679262732405
	Iterations:       239
	Function calls:   602
	Gradient calls:   0
	Hessian calls:    0
	Warning:          None

k: 6        xk: [   0.1018534264,     9.998803198,    0.4921686187,     1.343815625,        1.031817,     13.67213028]    fk: 5.73456792629       
Entering sub-algorithm.
	
	Simplex minimisation
	~~~~~~~~~~~~~~~~~~~~

	k: 0        xk: [   0.1018534264,     9.998803198,    0.4921686187,     1.343815625,        1.031817,     13.67213028]    fk: 5.73456792629       
	k: 100      xk: [   0.1018534264,     9.998803198,    0.4921686187,     1.343815625,        1.031817,     13.67213028]    fk: 5.73456792629       
	k: 200      xk: [   0.1018534264,     9.998803198,    0.4921686187,     1.343815625,        1.031817,     13.67213028]    fk: 5.73456792629       

	Parameter values: [0.10185342638321868, 9.998803197828817, 0.49216861866409689, 1.3438156252143161, 1.0318169995255779, 13.672130284166634]
	Function value:   5.7345679262911267
	Iterations:       238
	Function calls:   580
	Gradient calls:   0
	Hessian calls:    0
	Warning:          Simplex has not moved.

k: 7        xk: [   0.1018534264,     9.998803198,    0.4921686187,     1.343815625,        1.031817,     13.67213028]    fk: 5.73456792629       
Entering sub-algorithm.
	
	Simplex minimisation
	~~~~~~~~~~~~~~~~~~~~

	k: 0        xk: [   0.1018534264,     9.998803198,    0.4921686187,     1.343815625,        1.031817,     13.67213028]    fk: 5.73456792629       
	k: 100      xk: [   0.1018534264,     9.998803198,    0.4921686187,     1.343815625,        1.031817,     13.67213028]    fk: 5.73456792629       
	k: 200      xk: [   0.1018534264,     9.998803198,    0.4921686187,     1.343815625,        1.031817,     13.67213028]    fk: 5.73456792629       

	Parameter values: [0.10185342638321868, 9.998803197828817, 0.49216861866409689, 1.3438156252143161, 1.0318169995255779, 13.672130284166634]
	Function value:   5.7345679262913052
	Iterations:       238
	Function calls:   580
	Gradient calls:   0
	Hessian calls:    0
	Warning:          Simplex has not moved.

k: 8        xk: [   0.1018534264,     9.998803198,    0.4921686187,     1.343815625,        1.031817,     13.67213028]    fk: 5.73456792629       
Entering sub-algorithm.
	
	Simplex minimisation
	~~~~~~~~~~~~~~~~~~~~

	k: 0        xk: [   0.1018534264,     9.998803198,    0.4921686187,     1.343815625,        1.031817,     13.67213028]    fk: 5.73456792629       
	k: 100      xk: [   0.1018534264,     9.998803198,    0.4921686187,     1.343815625,        1.031817,     13.67213028]    fk: 5.73456792629       
	k: 200      xk: [   0.1018534264,     9.998803198,    0.4921686187,     1.343815625,        1.031817,     13.67213028]    fk: 5.73456792629       

	Parameter values: [0.10185342638321868, 9.998803197828817, 0.49216861866409689, 1.3438156252143161, 1.0318169995255779, 13.672130284166634]
	Function value:   5.734567926291307
	Iterations:       238
	Function calls:   580
	Gradient calls:   0
	Hessian calls:    0
	Warning:          Simplex has not moved.

k: 9        xk: [   0.1018534264,     9.998803198,    0.4921686187,     1.343815625,        1.031817,     13.67213028]    fk: 5.73456792629       
Entering sub-algorithm.
	
	Simplex minimisation
	~~~~~~~~~~~~~~~~~~~~

	k: 0        xk: [   0.1018534264,     9.998803198,    0.4921686187,     1.343815625,        1.031817,     13.67213028]    fk: 5.73456792629       
	k: 100      xk: [   0.1018534264,     9.998803198,    0.4921686187,     1.343815625,        1.031817,     13.67213028]    fk: 5.73456792629       
	k: 200      xk: [   0.1018534264,     9.998803198,    0.4921686187,     1.343815625,        1.031817,     13.67213028]    fk: 5.73456792629       

	Parameter values: [0.10185342638321868, 9.998803197828817, 0.49216861866409689, 1.3438156252143161, 1.0318169995255779, 13.672130284166634]
	Function value:   5.734567926291307
	Iterations:       238
	Function calls:   580
	Gradient calls:   0
	Hessian calls:    0
	Warning:          Simplex has not moved.


Parameter values: [0.10185342638321868, 9.998803197828817, 0.49216861866409689, 1.3438156252143161, 1.0318169995255779, 13.672130284166634]
Function value:   5.734567926291307
Iterations:       3252
Function calls:   6704
Gradient calls:   0
Hessian calls:    0
Warning:          None


Optimised parameter values:
r2 (500.000 MHz):            1.018534263832187
r2 (800.000 MHz):           99.988031978288177
phi_ex_B:                    0.492168618664097
phi_ex_C:                    1.343815625214316
kB:                      10318.169995255779213
kC:                     136721.302841666329186

relax> relax_disp.plot_disp_curves(dir='/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/LM63 3-site', force=True)
Opening the file '/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/LM63 3-site/disp_70_N.agr' for writing.
Opening the file '/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/LM63 3-site/disp_71_N.agr' for writing.
Opening the file '/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/LM63 3-site/grace2images.py' for writing.

relax> grace.write(x_data_type='res_num', y_data_type='chi2', spin_id=None, plot_data='value', file='chi2.agr', dir='/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/LM63 3-site', force=True, norm=False)
Opening the file '/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/LM63 3-site/chi2.agr' for writing.

relax> results.write(file='results', dir='/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/LM63 3-site', compress_type=1, force=True)
Opening the file '/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/LM63 3-site/results.bz2' for writing.



--------------------
- The 'CR72' model -
--------------------

Detected the presence of results files for the 'CR72' model - loading these instead of performing optimisation for a second time.

relax> pipe.create(pipe_name='CR72', pipe_type='relax_disp', bundle='relax_disp')

relax> pipe.switch(pipe_name='CR72')

relax> results.read(file='results', dir='/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/CR72')
Opening the file '/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/CR72/results.bz2' for reading.



--------------------
- The 'IT99' model -
--------------------

Detected the presence of results files for the 'IT99' model - loading these instead of performing optimisation for a second time.

relax> pipe.create(pipe_name='IT99', pipe_type='relax_disp', bundle='relax_disp')

relax> pipe.switch(pipe_name='IT99')

relax> results.read(file='results', dir='/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/IT99')
Opening the file '/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/IT99/results.bz2' for reading.

relax> model_selection(method='AIC', modsel_pipe='final', bundle=None, pipes=['No Rex', 'LM63', 'LM63 3-site', 'CR72', 'IT99'])
AIC model selection.


The spin cluster [':70@N'].
# Data pipe    Num_params_(k)    Num_data_sets_(n)    Chi2          Criterion     
No Rex         2                 30                   3427.90718    3431.90718    
LM63           4                 30                   106.39336     114.39336     
LM63 3-site    6                 30                   151.92056     163.92056     
CR72           5                 30                   18.45004      28.45004      
IT99           5                 30                   31.68772      41.68772      
The model from the data pipe 'CR72' has been selected.


The spin cluster [':71@N'].
# Data pipe    Num_params_(k)    Num_data_sets_(n)    Chi2        Criterion    
No Rex         2                 15                   47.35675    51.35675     
LM63           4                 15                   1.44240     9.44240      
LM63 3-site    6                 15                   5.73457     17.73457     
CR72           5                 15                   1.37893     11.37893     
IT99           5                 15                   1.45010     11.45010     
The model from the data pipe 'LM63' has been selected.

relax> relax_disp.plot_disp_curves(dir='/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/final', force=True)
Opening the file '/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/final/disp_70_N.agr' for writing.
Opening the file '/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/final/disp_71_N.agr' for writing.
Opening the file '/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/final/grace2images.py' for writing.

relax> value.write(param='pA', file='pA.out', dir='/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/final', scaling=1.0, comment=None, bc=False, force=True)
Opening the file '/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/final/pA.out' for writing.

relax> value.write(param='pB', file='pB.out', dir='/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/final', scaling=1.0, comment=None, bc=False, force=True)
Opening the file '/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/final/pB.out' for writing.

relax> grace.write(x_data_type='res_num', y_data_type='pA', spin_id=None, plot_data='value', file='pA.agr', dir='/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/final', force=True, norm=False)
Opening the file '/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/final/pA.agr' for writing.

relax> grace.write(x_data_type='res_num', y_data_type='pB', spin_id=None, plot_data='value', file='pB.agr', dir='/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/final', force=True, norm=False)
Opening the file '/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/final/pB.agr' for writing.

relax> value.write(param='phi_ex', file='phi_ex.out', dir='/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/final', scaling=1.0, comment=None, bc=False, force=True)
Opening the file '/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/final/phi_ex.out' for writing.

relax> grace.write(x_data_type='res_num', y_data_type='phi_ex', spin_id=None, plot_data='value', file='phi_ex.agr', dir='/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/final', force=True, norm=False)
Opening the file '/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/final/phi_ex.agr' for writing.

relax> value.write(param='padw2', file='padw2.out', dir='/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/final', scaling=1.0, comment=None, bc=False, force=True)
Opening the file '/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/final/padw2.out' for writing.

relax> grace.write(x_data_type='res_num', y_data_type='padw2', spin_id=None, plot_data='value', file='padw2.agr', dir='/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/final', force=True, norm=False)
Opening the file '/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/final/padw2.agr' for writing.
RelaxWarning: No data could be found, creating an empty file.

relax> value.write(param='dw', file='dw.out', dir='/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/final', scaling=1.0, comment=None, bc=False, force=True)
Opening the file '/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/final/dw.out' for writing.

relax> grace.write(x_data_type='res_num', y_data_type='dw', spin_id=None, plot_data='value', file='dw.agr', dir='/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/final', force=True, norm=False)
Opening the file '/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/final/dw.agr' for writing.

relax> value.write(param='kex', file='kex.out', dir='/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/final', scaling=1.0, comment=None, bc=False, force=True)
Opening the file '/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/final/kex.out' for writing.

relax> value.write(param='tex', file='tex.out', dir='/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/final', scaling=1.0, comment=None, bc=False, force=True)
Opening the file '/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/final/tex.out' for writing.

relax> grace.write(x_data_type='res_num', y_data_type='kex', spin_id=None, plot_data='value', file='kex.agr', dir='/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/final', force=True, norm=False)
Opening the file '/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/final/kex.agr' for writing.

relax> grace.write(x_data_type='res_num', y_data_type='tex', spin_id=None, plot_data='value', file='tex.agr', dir='/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/final', force=True, norm=False)
Opening the file '/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/final/tex.agr' for writing.

relax> grace.write(x_data_type='res_num', y_data_type='chi2', spin_id=None, plot_data='value', file='chi2.agr', dir='/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/final', force=True, norm=False)
Opening the file '/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/final/chi2.agr' for writing.

relax> results.write(file='results', dir='/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/final', compress_type=1, force=True)
Opening the file '/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/final/results.bz2' for writing.

relax> monte_carlo.setup(number=50)

relax> monte_carlo.create_data(method='back_calc')

relax> monte_carlo.initial_values()

relax> minimise(min_algor='simplex', line_search=None, hessian_mod=None, hessian_type=None, func_tol=1e-25, grad_tol=None, max_iter=10000000, constraints=True, scaling=True, verbosity=1)
Simulation 1
Simulation 2
Simulation 3
Simulation 4
Simulation 5
Simulation 6
Simulation 7
Simulation 8
Simulation 9
Simulation 10
Simulation 11
Simulation 12
Simulation 13
Simulation 14
Simulation 15
Simulation 16
Simulation 17
Simulation 18
Simulation 19
Simulation 20
Simulation 21
Simulation 22
Simulation 23
Simulation 24
Simulation 25
Simulation 26
Simulation 27
Simulation 28
Simulation 29
Simulation 30
Simulation 31
Simulation 32
Simulation 33
Simulation 34
Simulation 35
Simulation 36
Simulation 37
Simulation 38
Simulation 39
Simulation 40
Simulation 41
Simulation 42
Simulation 43
Simulation 44
Simulation 45
Simulation 46
Simulation 47
Simulation 48
Simulation 49
Simulation 50

relax> monte_carlo.error_analysis()

relax> state.save(state='final_state', dir='/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results', compress_type=1, force=True)
Opening the file '/data/relax/branches/relax_disp/test_suite/shared_data/dispersion/Hansen/relax_results/final_state.bz2' for writing.

