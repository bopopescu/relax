#! /usr/bin/python

# Script for packaging relax.

from os import chdir, getcwd, popen2, system
from string import split
import sys


class Package:
    def __init__(self):
        """Script for packaging relax into a .tar.bz2 archive."""

        # Check that the relax version string has been set.
        self.check_version()

        # Run the clean up script.
        system('./clean_up')

        # Check that the version of the manual is the same as the relax version!
        self.check_manual_version()

        # Check that all changes have been committed into the SVN repository.
        self.check_svn()

        # Test that the current directory is called relax.
        self.test_dir()

        # Remove the subversion directories.
        system('rm -rf .svn */.svn */*/.svn */*/*/.svn */*/*/*/.svn */*/*/*/*/.svn')

        # File name.
        self.file_name = 'relax-' + self.version + '.tar.bz2'

        # Create the archive.
        chdir('..')
        system('tar jcvf ' + self.file_name + ' relax')


    def check_manual_version(self):
        """Function for checking that the version of the manual is the same as the relax version."""

        # Open the manual version file.
        file = open('docs/latex/relax_version.tex', 'r')

        # Get the text.
        text = file.readlines()

        # Manual version.
        manual_version = text[0][8:-1]

        # Test if the versions are the same.
        if manual_version != self.version:
            print "The manual version does not match the program version."""
            sys.exit()


    def check_svn(self):
        """Function for checking that all changes have been committed into the SVN repository."""

        # Get the program version number printout.
        stdin, stdout = popen2('svn st')
        output = stdout.readline()

        # Close the pipes.
        stdin.close()
        stdout.close()

        # Their are changes.
        if output:
            print "Changes to the SVN working copy have been detected."
            print output
            sys.exit()


    def check_version(self):
        """Function for checking that the relax version string has been set."""

        # Get the program version number printout.
        stdin, stdout = popen2('./relax -v')
        output = stdout.readline()

        # Close the pipes.
        stdin.close()
        stdout.close()

        # Split by whitespace.
        data = split(output)

        # The version number has not been set.
        if len(data) != 2:
            print "The relax version number has not been set."
            sys.exit()

        # Version number.
        self.version = data[1]


    def test_dir(self):
        """Function for testing that the current directory is called relax."""

        # Get the uppermost directory name.
        cwd = getcwd()
        dirs = split(cwd, '/')
        basedir = dirs[-1]

        # Test.
        if basedir != 'relax':
            print "The base directory should be called 'relax'."
            sys.exit()


if __name__ == '__main__':
    Package()
