######################################################
# The relax data model redesign -- planning document #
######################################################


# Preparation.
##############


* Firstly release relax version 1.3.0 prior to any changes (to allow a functional version which handles RNA better, has the tensor PDB representation code, etc).

* Redesign 'self.relax.data'.

* Rename 'prompt/run.py' to 'prompt/pipe.py'.  Rename 'generic_fns/runs.py' to 'generic_fns/pipes.py'.

* Create the data pipe looping function for the 'pipes' argument (http://???).

* Create the spin loop function (http://???).

* Create a function for returning specific spin data.



# The incremental changes.
##########################

The following are the steps to be taken for the function to function, file to file incremental conversion of the old system to the new system.  For each function:

* Rewrite the function docstring expanding to better describe what the function is doing.  Convert to the epytext format for describing what data is input, what data is returned, etc.

* User function docstrings should not be converted to epytext format.  The variable __doctype__ should be set to 'plaintext' just after each docstring so that the API documentation can properly interpret the docstring.

* Write a unit test for the function.  This must be done prior to modifying the code.

* Remove all the 'run' arguments and the code accessing it.

* Add the 'pipes' argument to each user function in the 'prompt' directory to allow looping over a number of data pipes (http://?).

* Use the following code at the start if 'self.relax.data' is accessed by the function:
-----
# Alias the data for the current data pipe.
data = self.relax.data[self.relax.pipe]
-----
Then access the object 'data' throughout the function.
