Version 1.3.11
(12 August 2011, from /1.3)
http://svn.gna.org/svn/relax/tags/1.3.11

    Features:
        * Integration of relax and the BioMagResBank (BMRB, http://www.bmrb.wisc.edu).
        * Support for the creation of NMR-STAR version 3.1 files for BMRB deposition of model-free analysis results.
        * Support for the reading of all versions of NMR-STAR files containing model-free or relaxation data from the BMRB.
        * Use of the new bmrblib library for BMRB integration support (http://gna.org/projects/bmrblib).
        * Activated the PDC peak intensity type reading.
        * Added the Bruker PDC to the exp_info.software_select user function back end.
        * Implemented the value.set user function in the GUI.
        * Redesign of how relaxation data is handled within relax so that the data is identified via ID strings rather than relaxation type and frequency strings.
        * Added two sample scripts for determining the populations of an ensemble of small molecules.  This uses RDCs and PCSs with the N-state model to study the dynamics of small organic molecules (http://dx.doi.org/10.1002/chem.201100854).
        * The GUI can now be resized.
        * Big clean up and simplification of the GUI code resulting in a more regularised GUI on all operating systems.
        * Added initial support for determining protein connectivities in the internal structural reader.  This is currently only for intra-residue connectivities in the protein backbone.
        * Support for the reading of the organic chemistry XYZ 3D structure file format.

    Changes:
        * Removed the Numeric module from the --info print out as it is completely unused now.
        * Added the Bruker PDC software info to the exp_info module.
        * The pdc.read user function back end is now reading the PDC version information.
        * Added a catch for the "worst case per peak scenario" option in the PDC.  This will now throw a RelaxError, telling the user to go back to the PDC and use the other option.
        * Converted the pdc.read user function back-end to use the \t delimitation of the PDC file for parsing.
        * The R1 value and error are now being read directly from the PDC file.
        * Added wrapper methods to the relaxation curve-fitting specific code for the new C modules.  These allow the parameter numpy array from minfx to be converted into a Python list prior to sending it into the C module.
        * Added a check for the runpy Python module.
        * Scripts can now be run again under Python versions 2.4 or lower (by avoiding the runpy module).
        * The auto_analyses package modules are now imported by __init__ to force their existence.
        * The relax_data.back_calc user function arguments no longer need to be supplied.
        * Shifted all of the model-free sample scripts into the new subdirectory sample_scripts/model_free.
        * Added copyright headers to all of the sample scripts, and updated the introduction text.  This allows users to determine the age of the scripts.
        * Updated the OpenDX mapping sample scripts from the relax 1.2 to the 1.3 design.
        * Added a sample script for creating plots of experimental verses back calculated relaxation data.
        * Deleted the incomplete and useless N_state_model.py sample script.
        * Created a sample script subdirectory called n_state_model.
        * Added a sample script for the unsuccessful two domain N-state model optimisation.
        * Deleted the ancient TODO file, as it is no longer relevant.
        * Deleted the SRLS analysis type - there is no incentive to develop this part of relax.
        * Removed 'relax_disp' from the VALID_TYPES data pipe type array.  This is supported in the relaxation dispersion 'relax_disp' branch and not in the main line.
        * The RDC and PCS Q factor user functions now do nothing when data is missing rather than failing.  A warning is given and the function now simply returns rather than raising an error.
        * The grace file created by the pcs.corr_plot user function now separates each element into its own graph.
        * Converted the summary from the final_data_extraction.py sample script into comma separated file (.csv).
        * Added the PDB reading parts of Scientific python to relax so that Scientific python is no longer a relax dependency.
        * The Scientific python PDB reading tests are no longer skipped if the module is not installed.
        * Removed Scientific python and Numeric from the blacklisted modules.  This is for the docstring fetching script to generate the user function section of the user manual.
        * relax icon is not shown in window title if running on a Mac.
        * Included the relax development team to copyright statement in the main window of the GUI.
        * Peak lists and relaxation times are collected in data grids within the GUI.
        * Updated the Bieri et al., 2011 reference as the relax GUI paper is now published (http://dx.doi.org/10.1007/s10858-011-9509-1).
        * Changed the "Help->Contact relaxGUI" to "Help->Mailing list contact".
        * Renamed the "Relaxation time [s]" column to "Relaxation delay [s]" in the GUI as this is a more correct description.
        * Deleted Edward's ancient Melbourne Uni email address from the MEDLINE info.
        * Normalisation of the text in the auto model-free analysis GUI tab.  The font sizes are now all the same, the text is not right aligned (not seen under Linux but very ugly in Windows), and semicolon usage and capitalisation is normalised.
        * Regularisation of the font formatting in the steady-state NOE GUI tab.
        * Shifted the title and subtitle creation for the NOE frame into a base class for all frames to use.
        * Regularisation of the fonts, titles, and subtitles in the Rx auto-analysis frames.
        * Created the add_subsubtitle() base class method for creating a sub-sub-title in the GUI.
        * Regularised the text in the results tab.
        * Regularised the "Single delay cycle time [s]" text in the model-free frame.
        * Attempt to regularise the text in the text controls.
        * Regularised all the stead-state NOE frame text controls.
        * Created the add_static_text() base class method for all the GUI frames to use.
        * Added the add_button_open() base class method for regularising the buttons across GUI frames.
        * Regularised all of the auto NOE analysis frame buttons.
        * Added the add_text_sel_element() base class method for creating one of the basic frame elements.
        * Better layout for the base class static text, text control and button addition (for the GUI).
        * Added a stretchable spacer to the NOE window so the execute relax button is always at the bottom right.
        * Completely refactored the model-free model buttons code.
        * Shifted the model-free add_execute_relax() method into the base class for all analysis tabs to use.
        * The peak intensity GUI element is now enclosed within a StaticBox.
        * Shifted the main GUI window layout to the start of the __init__() method.
        * Created the function gui.misc.add_border() for adding borders to generic GUI elements.
        * Added an internal border to the relaxation peak list selection GUI element.
        * Created the analysis tab base class methods add_spin_control() and add_spin_element().  These are similar to the text control and text selection elements respectively, but use a SpinCtrl instead.
        * The model-free analysis tab now uses the base class add_spin_element() method for the max iterations.
        * Shifted the model-free list box in the results tab into the new add_list_box() method.
        * Shifted the 'Execute relax' text to be inside the button.
        * Added an icon to the 'Change' buttons throughout the GUI.
        * Added the oxygen icons for opening folders.
        * The open folder icons are now used for the 'Results directory' change buttons.
        * The settings windows are now derived from wx.Dialog rather than wx.Frame.  This is for better operation under MS Windows.
        * Added the document-close Oxygen icons.
        * Added support for old save files in the Peak_intensity.sync_ds() method (for the GUI).
        * Argument change_all for deselecting residues in the d'Auvergne protocol has to be boolean.
        * The relax_fit overfit_deselect() method now skips deselected spins.  This prevents unnecessary warnings about missing data for deselected spins.
        * All of the overfit_deselect() methods now skip deselected spins, avoiding confusing warnings.
        * Created a script for byte compiling the Python source files.
        * Added the data_type() method to the specific functions API.  This will be used to determine the type that a given parameter from data_names() should be.
        * Implemented the model-free version of the data_type() API method.
        * The heteronucleus and proton type parameters can now be specified by their parameter names as well.
        * The create_molecule, create_residue, and create_spin functions now return the created container.
        * Modified the create_spin() function to overwrite the first spin if empty.
        * Redesign of the structure.load_spins user function back end for XYZ file reading support.
        * Redesign of the main relax module.  The module has been renamed to 'relax.py', and the original file 'relax' is now a very basic python script which simply loads the module and runs the new start() function for launching relax.
        * The relax mode normally specified by the command line can now be overridden.
        * Removed the executable svn property on the info module.
        * Shifted the pedantic flag into the status object.
        * RelaxWarnings now only show a traceback when the pedantic flag is True.
        * The relax state is now saved on a RelaxError when the pedantic rather than debugging flag is turned on.  As both flags can be given, this allows for this state saving to be activated or deactivated.
        * The relax_io.read_spin_data() function no longer skips short lines so that a warning is given for it.
        * generic_fns.sequence.validate_sequence() now also checks for the spin ID, data and error columns.  This is now used by relax_io.read_spin_data().
        * Files created by the grace.write user function are now put into a new list cdp.results_files.
        * The value.write user function now also adds to the cdp.result_files structure.
        * Modified the execution lock to have a mode.  This allows for greater control and avoid string comparison of names to determine if a script or auto-analysis acquired the lock.
        * The dauvergne_protocol is now more robust if the program is interrupted and restarted later.  The opt/results.bz2 file is now searched for, and if not the round is assumed incomplete.
        * The pymol.tensor_pdb() user function now shows the diffusion tensor using PyMOL sticks.
        * Creation of the new structure.read_xyz user function.
        * Addition of two new system tests Structure.test_read_xyz_internal() and Structure.test_read_xyz_internal2().
        * Changing the description in the user functions structure.load_spins and structure.read_xyz.
        * Code for extracting a vector between specified spins in a XYZ file has been included in the generic_fns.structure.internal.
        * Debugging in the function generic_fns.structure.main.load_spin() in order to load a spin for XYZ file properly.
        * For printing out of modified spins, a test to check whether the spin_name exists or not has been added.
        * Added the pymol_macro() method to the analysis specific API.
        * Clean up of parameters in the _create_mc_relax_data() specific API common method.
        * A number of epydoc docstring fixes.
        * The sconstruct script is only executed when it is the main loaded module or if launched by scons.
        * Improved the list of modules and packages used in the epydoc documentation.  The files and directories which are not python modules or packages are now properly skipped.


    Bugfixes:
        * The setting of the integration method in the pdc.read user function now works.
        * Fixes for the pdc.read user function back-end for the NOE PDC file.
        * Fix for the pdc.read user function back-end for reading NOE data out of the new PDC files.
        * Fix for the relaxation curve-fitting back_calc_I C function so that it works under Python 2.5.
        * Fix for the initialisation of the Bruker_import class.  This allows this module to be loaded in Python 2.4.
        * The reference counting appears to not be needed in the C modules.  This allows the modules to be compiled under Python 2.4 or lower.
        * Loosened all of the model-free tests so that the minimisation statistics are no longer checked.  This will stop users from thinking they have a problem with their version of relax, after running the test suite.
        * Removed numpy from the relaxation curve-fitting C module code.  This should help with incompatibilities (and segfault failures) between different Python versions, as this seems to be due to the numpy C interface.
        * Improved the RelaxWarning for the reading of NMRView peaks with missing assignments (bug #17876).
        * Fix for the N-state model for when only the paramagnetic centre position is optimised.
        * Fix for the grid search limits as they were being scaled iteratively for each successive spin system (bug #18030).  This only affects certain type of custom grid searches.
        * A ":" symbol in the description of a function variable was preventing the compilation of the user manual using scons (bug #18037).
        * Opened files are closed properly after writing in the final_data_extraction.py sample script.
        * If no diffusion tensor is present, creation of diffusion pdb will be skipped (final_data_extraction.py sample script).
        * Updates for the Dasha sample script for the current version of relax.
        * Updates for the diffusion tensor optimization sample script for the current version of relax.
        * Some fixes for the subprocess.Popen() calls on MS Windows.
        * Removed event.skip due to conflict with Windows (auto-analysis Rx fix in the GUI).
        * Fixes for the spin.copy GUI user function element.  This still had remnants of the residue.copy window.
        * The relax icon is not shown in "Global relax settings" window if running on a Mac.  This fixes a bug whereby closing the window causes the GUI to crash.
        * Complete redesign of the relax global settings window to fix the Mac OS X crashing (bug #18197).
        * Fix for the global settings window - it needs to inherit from UF_window!
        * Fix for the NOE auto-analysis - the column numbers for the deselected spins file are now assumed.  The residue number is assumed to be in the first column.  This is a hack until the spin selection part is better designed.
        * Fix for the bug reported as sr #2764.  The problem was that the sequence file is now in the variable sequence_file.
        * Fix for the sequence.read user function - the force flag is now being passed on.
        * Fix for the sequence.write user function - the force flag is now passed to open_write_file().
        * Fix for the sequence.write user function when the column separator is not whitespace.  The column widths are no longer fixed if the separator is not whitespace.
        * Many bug fixes for the functions of the generic_fns.mol_res_spin module.  These fixes are for when a data pipe other than the current data pipe is used.
        * Fix for the relax save states - the current data pipe is now saved and restored.  The info about which pipe was the current one was being blacklisted, so was not stored in the relax save file.
        * Fix for the atomic position check in the spin.create_pseudo user function.
        * Fix for pseudo-atom support when only a single structure is loaded.  Pseudo-atom support was only working correctly for when multiple models were loaded and atomic positions were not averaged.
        * Fix for the spectrum.read_intensities user function int_method argument for volumes.  Volume integration should be called 'point sum', but the back end code was checking against the string 'volume'.
        * Fix in one of the relaxation curve-fitting system tests - 'volume' should have been 'point sum'.
        * Fix for the PCS back-calculation function - divide by zero is now avoided.  The function was calculating the normalised bond vector between the lanthanide atom and itself.  The normalisation in this case is now avoided.
        * Fix for the spectrum user functions for when the ID order does not match those loaded.  If the order of IDs sent to spectrum.replicated did not match the order they were loaded by spectrum.read_intensities, then the spectrum.error_analysis user function would fail.  The order is no longer important.
        * Fix - the pipe switching flag is now propagated all the way to the data store add() method.  The flag was previously not sent to the method so that the creation of a new data pipe always resulted in a switch to that pipe.  This bug is normally harmless.
        * Fix for the model-free _determine_model_type() method when the spin container has no 'local_tm'.  This code was failing in certain rare circumstances (when the setting up of the diffusion tensor was forgotten).
        * Fix for structure.read_pdb for when the file contains no PDB data.  This is now caught, and a warning is given and the function exists cleanly.
        * Fix for the RelaxWarning system on Mac OS X, the base class __str__ method now returns a simple string.  On a Mac, the warning message text was in unicode whereas the __str__() method must return a standard string.  So now __str__() is using the str() method to convert.
        * Fix for the structure.vectors user function.  It no longer complains about a PDB already loaded when no PDB has been loaded.
        * Fix for the resetting of the global optimisation round in the dauvergne_protocol auto-analysis.  The value was being reset to None at every round.
        * Fix for the round determination in the dauvergne_protocol auto-analysis.  The 'opt' directory was missing in the path.
        * Fix for the saving/loading of a results file in GUI mode.  The save files were containing the ds.relax_gui object and restoring it on loading.  This caused the data storage of the GUI to change underneath the GUI resulting in a crash or race conditions.
        * Fix for the resetting of the relax data store - the cdp structure is now set to None.  Previously the data store would be cleared, but the __builtin__.cdp structure would point to the old current data pipe, keeping it in existence and causing problems in the GUI.
        * Fix for the xydxdy type Grace graphs - the dx data was not being placed in the file.
        * Fix for the structure.create_diff_tensor_pdb user function for when no element info is available.  These atoms where the element is not in the PDB file or cannot be determined should have been skipped.
        * Fix for the molmol macro user functions - one of the args 'param' should have been 'data_type'.
        * Fix for the spin_loop() calls when generating Molmol macros.  The full_info argument should have been set to True.
        * Fix for the molmol.write macro creation user function - the file arg can be None!
        * Fix for the molmol.write user function for model-free parameters.  Some of the parameters were using the ancient self.relax code path which was eliminated with the redesign of relax 1.2 to 1.3.
        * Fixes for the old scripts/optimisation_testing.py script.  This was also using the ancient self.relax code path.
        * Fix for the molmol macro of the ts parameter, the spin container variable was spelt incorrectly.
        * Fix for the data.align_tensor.calc_eta() function - divide by zeros are now avoided.  When Azz is zero, eta is now set to NaN.
        * Typo fix in the unused and incomplete dfunc function to remove compilation warnings on MS Windows.
        * Fix for the data.align_tensor.calc_R() function - divide by zeros are now avoided.  When Aa is zero, Ar is now set to NaN.
        * Fix for the test_opt_constr_bfgs_mt_S2_0_970_te_2048_Rex_0_149 model-free system test on MS Windows.  The te parameter check was too strict.
        * Another divide by zero problem is being caught in the RDC Q-factor code.
        * The dipolar_constant() and pcs_constant() functions now catch division by zero problems.


Version 1.3.10
(18 February 2011, from /1.3)
http://svn.gna.org/svn/relax/tags/1.3.10

    Features:
        * Support for the reading of relaxation data out of the Bruker Protein Dynamics Centre (PDC) files.

    Changes:
        * Updates for 2 model-free system tests for a new system which again shows optimisation differences.

    Bugfixes:
        * Fix for a bug in the N-state model - the Q-factors and back calculated RDCs and PCSs were set to that of the last Monte Carlo simulation.
        * Fix for the N-state model error returning method for when errors are not present.


Version 1.3.9
(26 January 2011, from /1.3)
http://svn.gna.org/svn/relax/tags/1.3.9

    Features:
        * The addition of Michael Bieri's graphical user interface - relaxGUI.

    Changes:
        * Improvements to the HTML version of the user manual (http://www.nmr-relax.com/manual/1.3/relax.html).

    Bugfixes:
        N/A


Version 1.3.8
(20 January 2011, from /1.3)
http://svn.gna.org/svn/relax/tags/1.3.8

    Features:
        * Created a sample script to create a CSV file of model-free results for reading into spreadsheets, based on the LaTeX table generation script.
        * Extensive system tests for all the model-free models have been introduced.

    Changes:
        * Loosened the te check in value_check() so that the test_opt_constr_bfgs_back_S2_0_970_te_2048_Rex_0_149() model-free system test would pass on 32-bit Linux.
        * Renamed the model-free results LaTeX table generation script.
        * Created a test-suite module to aid in the back-calculation of relaxation data from model-free parameters independent of relax.
        * Updates for Python 3.0 using 2to3.

    Bugfixes:
        * Fix for running scripts in certain versions of python - if a file with the same name as the script lies in one of the paths in sys.path, then that file will be executed rather than the script.



Version 1.3.7
(10 January 2011, from /1.3)
http://svn.gna.org/svn/relax/tags/1.3.7

    Features:
        * Shifted the relax installation path variable from __main__ into the status singleton object, allowing relax modules to be imported outside of relax.
        * Shifted the global relax debug flag from __main__.debug to the relax status singleton, allowing the flag to be defined even when imported from outside of relax.

    Changes:
        * Speed up of the relaxation curve-fitting system tests.
        * The sample_scripts/full_analysis.py script has been renamed to sample_scripts/dauvergne_protocol.py.
        * Improvements to the test suite final print out with a table of skipped tests.
        * The data pipe system test is avoiding the frame order data pipe, allowing the test to pass without scipy installed.
        * The alignment tensor system test now uses the N-state model rather than frame order so it is always tested.
        * The frame order system and unit tests are skipped if scipy is not installed.
        * The frame order analysis is disabled if scipy is not installed.
        * The data pipe generic code now uses dep_check to see if the relaxation curve-fitting is available.
        * The system tests now use the RelaxTestLoader to allow tests to be skipped.
        * The unit vector system tests using scientific python are now being skipped if the package is not installed.
        * The structure system tests involving scientific python are now skipped if the package is not installed.
        * The RelaxTestLoader has been added as a replacement for unittest.TestLoader to handle the skipping of tests when optional Python packages are not installed.
        * Shifted the status singleton instantiation to the import level in all modules, saving execution time.
        * Big code cleanups in unit_test_runner.py

    Bugfixes:
        * Peak intensity errors can now be calculated when using volume integration and replicated spectra (bug #17457).
        * Failure of the prolate diffusion tensor in model-free analysis - if the tensor is initialised with Da = 0, the tensor is converted to being oblate.  This was introduced in relax version 1.3.6.
        * relax can now operate without scipy being installed.
        * Updated four model-free optimisation system tests to pass under 32-bit Linux.
        * Made the N_state_model.test_pcs_fit_zero_pos system test less stringent so it passes on 32-bit Linux.
        * The model_free _model_setup() method should handle no model-free model being set when reading relax 1.2 results files (bug #17417).



Version 1.3.6
(31 December 2010, from /1.3)
http://svn.gna.org/svn/relax/tags/1.3.6

    Features:
        * Addition of Michael Bieri's model-free data extraction script.
        * Added support for CCPN Analysis 2.1 peak lists (exported in Sparky format).
        * Execution locking has been implemented to prevent threaded execution from killing relax.  This will be useful for the relax GUI.
        * Scripts are now run as modules rather than using execfile(), closing a security hole.
        * Created the frame_order.domain_to_pdb() user function to associate PDB files with domains in the current data pipe.
        * Rewrote frame_order.cone_pdb() to handle all of the frame order models.
        * The sign of the RDC can be inverted to correct for the negative 15N gyromagnetic ratio.
        * Better identification of the molecule end in the internal PDB reader.
        * Implemented Monte Carlo simulations for the N-state model.
        * The grid_search() user function argument incs can now be a list with None elements to fix parameters.
        * Expanded the number of frame order models to include the 'free rotor', 'rigid', 'rotor', 'iso cone, free rotor', 'iso cone, torsionless', 'iso cone', 'pseudo-ellipse, free rotor', 'pseudo-ellipse, torsionless', and 'pseudo-ellipse'.
        * Pre-defined probabilities can now be used in the 'fixed' N-state model optimisation.
        * The Ln3+ position can be directly optimised in the N-state models.
        * The pcs.back_calc() user function now does something.
        * Created the n_state_model.elim_no_prob() to remove structures with zero probability.
        * Created the align_tensor.fix() user function for fixing the alignment tensor during optimisation.
        * The alignment tensor optimisation is now optional within the population N-state model target fn.
        * The RDCs and PCSs can now be given optimisation weights.
        * Per point comments are now included in the Grace files.
        * The RDC and PCS correlation plots now also show the experimental errors.
        * The RDC and PCS back-calculation user functions now add the alignment ID to the RDC and PCS if absent to allow both data types to be back-calculated in the absence of measured data.
        * The N-state model calculate() method now stores the back-calculated RDCs and PCSs and Q factors.
        * The PyMOL module pymol.cmd is now available within the pymol user function class, accessible as pymol.cmd from the prompt/script interface.

    Changes:
        * API documentation improvements with epydoc docstring fixes.
        * Numerous new system tests to catch bugs and prevent bugs appearing in the future.
        * Peak intensity data is now internally handled differently to improve its flexibility.  This will be beneficial for handling Bruker PDC (Protein Dynamic Center) files, relaxation dispersion data, and adding new types of relaxation data.
        * The 'scons clean' target now removes temporary relax save files.
        * The molecule type can now be specified.
        * Improved the diffusion tensor print out.
        * pipe.delete() without args will now delete all data pipes.
        * Added some checks to the dauvergne_protocol model-free analysis for the required previously optimised results.
        * Shifted the steady-state NOE specific analysis code into its own package.
        * Shifted the debug and pedantic flags into the __main__ namespace for better access from other modules.
        * Modified the specific code API to remove a number of references to spin_id, as not all analyses use spins.
        * Renamed the results_folder arg to results_dir in the NOE auto-analysis, and rearranged the args.
        * Citations now include the status if not 'published'.
        * Created a new directory 'graphics' for all relax artwork.
        * The structure.load_spins() user function now gives a RelaxWarning if no data could be found.
        * The negative cones and z-axes are now not created for the pseudo-ellipses in frame_order.cone_pdb().
        * Added some transparency to the cone in pymol.cone_pdb().
        * Modified the pymol.cone_pdb() user function to handle x, y, and z-axes.
        * Modified create_cone_pdb() to accept a pre-made structural object and to create a file only when asked.
        * Switched the names of the Pseudo_elliptic and Pseudo_elliptic2 classes.
        * Created a API common specific code set_selected_sim() method for a single global model.
        * Created a API common specific code model_loop() method for a single global model.
        * All objects placed into the relax data store structure are now stored in the XML save file.
        * Parameters can be fixed to the original values during the frame order grid search.
        * The user function argument checker arg_check.is_int_or_int_list() can now allow for None list elements.
        * The frame order model can be overwritten by frame_order.select_model().
        * Shifted to using numpy.sinc() for the frame order equations.
        * Switched the theta and phi angles in cartesian_to_spherical() to match the rest of relax.
        * Created a new module for performing coordinate transformations (maths_fns.coord_transform).
        * The pipe.display() user function now places quotation marks around the pipe names and shows which is the current data pipe.
        * The align_tensor.display() user function now prints out the generalized degree of order (GDO) value.
        * The back-calculated alignments tensors are now being stored in the current data pipe.
        * Removed the docstring length check from the code validator script.
        * The loading of RDCs and PCSs for non-existent spins now only throws a RelaxWarning.
        * The select.read() and deselect.read() user functions can now accept file handles or dummy file objects.
        * Limit arrays are now sent into the minfx generic interface for limiting simulated annealing.
        * The align_tensor.delete() user function can now be used to remove all tensors simultaneously.
        * Made a RelaxError less stringent so that the paramagnetic centre can be unfixed.
        * Initialising an alignment tensor now adds the ID to the alignment ID list.
        * Changes to the NOE auto-analysis for the GUI:  The output filename can be specified;  The folder, where results files will be placed, can be specified;  The label of heteronucleus and proton of peak lists and PDB file can be selected;  The sequence is read either by sequence file or PDB file;  Removed white spaces and progress output.
        * Changed the alignment tensor parameter scaling back to 1 as this was slowing down the optimisation.
        * The rdc.back_calc() user function without an ID arg will back-calculate RDCs for all alignments.
        * Renamed the pcs.centre() user function to paramag.centre() to abstract for the PRE.
        * Better support for RDC and PCS correlation plots with and without errors.
        * Inverted the x and y axes in the RDC and PCS correlation plots.
        * Better support for tensor-less N-state model optimisation.
        * The align_tensor.copy() tensor_to arg can now be None, this is useful for copying between data pipes.
        * Added a function for the pseudo-elliptical cosine function, this is a numerical approximation generated by series expansion.
        * Added a method for translating pymol.cmd.do() commands into specific pymol.cmd functions.  This prevents problems with commands being executed asynchronously.  For example images were being saved before ray-tracing was complete.
        * The RDC and PCS correlation plots now only show selected spins.

    Bugfixes:
        * The loading of Monte Carlo simulation data from relax 1.2 version results files has been fixed (bug #17361).
        * Bug fix for the relaxation data add_data_to_spin() function - missing data for individual spins was not properly eliminated.
        * For the 1.2 results files, the data is being extracted even if the spin is not selected.
        * Sparky peak lists from CCPN Analysis 2.1 can now be read (bug #17341).
        * Fix for the broken grace.view() user function (bug #17344).
        * Added 'CH' and 'OT' as carbon and oxygen atoms to the internal PDB reader (bug #17343).
        * The script path is now being removed from sys.path as this was causing incorrect scripts to be loaded if multiple scripts are executed sequentially or nested.
        * Fix for the 'list index is out of range' error when differently sorted peak lists, or lists with missing data are loaded (bug #17276).
        * Fix for the input of (Dxx, Dyy, Dzz, Dxy, Dxz, Dyz) ellipsoidal diffusion parameters.
        * Fixes for some currently unused, but useful, diffusion tensor internal API functions.
        * Fix for the NOE auto-analysis - the spins are now named to the value of the 'heteronuc' arg.
        * Fix for the frame_order.cone_pdb() user function - the cone is already in the PDB frame, no rotation required.
        * Fix for the average domain rotation in pymol.cone_pdb().
        * Bug fix for the frame_order.pivot() user function - it is now functional.
        * The base contents of the relax data store are no longer saved with a call to results.write().
        * Fix for the pcs.back_calc() user function for when multiple structures are loaded.
        * Fix for rdc.read() when neg_g_corr is set to True and the RDC list contains entries with None.
        * Fix for the failure of model elimination in the full analysis script (bug #13259).
        * Added a catch in iso_cone_S_to_theta() for bad order parameters > 1.
        * The attached proton PDB name is no longer hardcoded to 'H' in the dauvergne_protocol auto analysis.
        * When loading save states, data pipe names are always converted to a string to avoid unicode problems.
        * Hardcoded the factorial() function to return support for Python 2.4 and 2.5.
        * Small fixes and improvements to the rdc.back_calc() user function - align IDs are being used instead of RDC IDs so RDCs can be back-calculated even if measured RDCs are not present.  And spin info is also being checked for better error reporting to the user.
        * Fix for the alignment tensor rotation matrix - it is now always in the right handed universe.
        * Bug fix for the RDC back_calc() function - the align_id arg was being ignored.
        * Fix for the RDC back_calc() function for when N=1 in the N-state model, the bond vector structure was not correct.
        * Fixes for the N-state model target function setup for when no parameters are optimised.
        * Fix for the Grace write_xy_data() function for when data values of None are passed in.
        * Bug fix for the RDC back-calculation function.
        * Bug fix for the control of PyMOL (as a module).
        * Small fix for the grace.write_xy_header() function, the symbol numbers now range only between the legal values of 1 to 10.



Version 1.3.5
(21 May 2010, from /1.3)
http://svn.gna.org/svn/relax/tags/1.3.5

    Features:
        * Addition of the frame_order.ref_domain() user function to specify the alignment of different domains.
        * Converted the reduced J(w) mapping sample script to the relax 1.3 design to make it functional.
        * Created the 'rigid' frame order model.
        * Made the profile module optional, removing the dependency on the Python development packages.
        * Created the maths_fns.rotation_matrix.axis_angle_to_quaternion() function.
        * Created the maths_fns.rotation_matrix.quaternion_to_axis_angle() function.
        * Created the maths_fns.rotation_matrix.R_to_quaternion() function.
        * relax save files are now by default XML formatted rather than the pickle format (for better compatibility with future relax versions and between different systems).
        * Added a force flag to the state.load() user function.
        * Redesign and improvement of the frame order grid search.
        * Added a script for creating Molmol macros to represent the model-free motions.
        * Created the structure.delete() user function for deleting all structural information.
        * Spun out the automatic model-free protocol code from the full_analysis.py script.  The simplified script now simply sends in user supplied data to an automatic analysis API.
        * Expansion of the rotation_matrix module with the addition of many new conversion functions.
        * Added support for using methyl pseudo-atom RDCs.
        * Created the structure.get_pos() user function for extracting atomic positions.
        * The atomic position can now be directly supplied to pcs.centre().
        * Addition of a sample script for the determination the relative stereochemistry of organic molecules.
        * Large improvements for the creation of 2D Grace plots.
        * Anisotropic cone PDB representations can now be created.
        * The diffusion tensor within the PDB frame can now be specified, avoiding the 2304 different Euler angle conventions for a rank-2 symmetric tensor.
        * PyMOL is now being executed as a python module, if available, instead of being launched on the command line and remotely controlled.
        * Addition of the rdc.display() and rdc.write() user functions.
        * Addition of the pcs.display() and pcs.write() user functions.
        * Implemented dfunc_tensor_opt() and d2func_tensor_opt() allowing all optimisation algorithms to be used for the N-state model.
        * Creation of the rdc.corr_plot() and pcs_corr_plot() user functions for creating correlation plots of measured vs. back-calculated RDCs and PCSs.
        * Added the -i or --info option to relax.

    Changes:
        * Test suite fixes for Python 2.5.
        * Epydoc docstring improvements/fixes for the API documentation.
        * Many updates using 2to3 preparing for a transition to Python 3.x.
        * Renamed the pipe.list() user function to pipe.display().
        * Created a base class for the user function classes.  More user function back end simplifications.
        * Addition of many new RelaxError classes for the user function interface.
        * Removal of many unused Python module imports.
        * Redesign of the RelaxError classes.
        * Simplified all the argument RelaxError classes using BaseArgError.
        * Added a check for the unimplemented constraints in the frame order code.
        * Rearrangement of the handling of frame order models.  The tensor rotation Euler angles are now model independent, the 'rigid' model is better supported, and a clear isolation of the isotropic cone model has been made.
        * Shifted the current data pipe to __builtin__.cdp so that it is accessible as 'cdp' in all of relax - including user scripts (and removal of 484 calls to generic_fns.pipes.get_pipe()).
        * Specific architecture and optimisation details are now printed if the frame order system tests fail.
        * Added a function for converting the frame order matrix to the rotational superoperator.
        * Improved and expanded the output of the print_frame_order_2nd_degree() function.
        * Function renaming and argument order changes in the maths_fns.rotation_matrix module.
        * Huge simplifications to the unit tests for the maths_fns.rotation_matrix package.
        * Added a very basic, and completely empty module and class for SRLS analysis.
        * Redesign of the relax state loading for adding support for a XML formatted state file.
        * Shifted the results.write() force arg to the end.
        * Created the relax data store is_empty() method.
        * Renamed the state.load() and state.save() directory argument from dir_name to dir for consistency with the rest of relax.
        * Redesigned the relaxation curve fitting grid search for the new design of the minfx grid search.
        * Redesigned the N-state model grid search setup around the new minfx interface.
        * Redesigned the model-free grid search setup around the new minfx interface.
        * Renamed the 'grace.py' sample script to 'mf_grace_S2_vs_te.py'.
        * Added the spin_id_col arg to the rdc.read() user function.
        * Changes to the pcs.read() and rdc.read() user function interfaces.
        * Column numbering now starts at 1 rather than 0 within the user functions.
        * The relax_io.read_spin_data_file() function has been created to handle all columnar text files where each row corresponds to a spin.
        * Rewrote the tokenise() function to allow for the '&' boolean operator for residues and spins, allowing ':1&:GLY' or '@453&@N' to be parsed.
        * Renamed all the alignment ID args and variables 'id' to 'align_id' in the RDC and PCS user functions.
        * Added the relax_io.write_spin_data_file() function for writing spin specific data to a file (can be STDOUT).
        * Significant improvements to the __find_bonded_atoms() method of the internal PDB reader.
        * Improved the error handling for AICc model selection.
        * Added user variable checking to the full_analysis.py script.
        * Added functions for determining the element name and isotope number from an isotope name.
        * Added frame order methods necessary for the dx.map() user function.
        * Huge clean up / redesign of the specific analysis internal API.
        * Better layout of the user functions in the relax manual significantly dropping the page count.
        * Formatting improvements in the relax manual.
        * Removed the checking of sequence data from generic_fns.value.set().
        * Modified the alignment tensor print out to be more compact.
        * The PCS centre can now be forcefully overwritten.
        * Added the back end to the rdc.back_calc() user function (making it functional).
        * Modified all the specific analysis overfit_deselect() methods to warn when spins are deselected.
        * align_tensor.display() now prints the magnetic susceptibility tensor.
        * The rotation matrix to Euler angle algorithms have been converted to the general one of Ken Shoemake.
        * Simplifications and clean up of the prompt and script UI code.
        * Detachment of the prompt/script interface from relax allowing it to be imported by any python code.
        * Switched from using a cone angle to using an order parameter in the isotropic cone frame order model.
        * Redesigned the program introduction as an abstraction for different UIs, shifting it into the intro module.
        * Changed the program description to "Molecular dynamics by NMR data analysis".
        * Created a module for the automatic relaxation curve fitting protocol.
        * Shifted the RDC and PCS Q-factor calculation code so that it is no longer N-state model specific.
        * The RDC and PCS Q-factor calculation functions can now accept a spin_id arg.
        * Individual system tests can now be executed through the relax test suite.
        * Addition of the relax status singleton object for communicating status info between the core and the UIs.
        * Partially removed the need for downstream Fink specific modifications.
        * Creation of the NOE auto-analysis module.
        * Fixes for the structure.load_spins() user function docstring for RNA/DNA work.
        * The n_state_model.select_model() user function can now change the model.
        * Added a maximum global iteration arg and check into the dauvergne_protocol.py module.

    Bugfixes:
        * Fix for the quaternion_to_R() function (due to incorrect information in Wikipedia).
        * Character encoding fix - cannot use umlauts.
        * Fix for the kron_prod() function.
        * Compilation on Mac OS X with Python 2.6 now works.
        * Added a module containing functions for checking user function args, removing many hidden argument checking bugs.
        * Fix for the calls to transpose_14().
        * Bug fix for the relaxation curve-fitting difference plot script.
        * Fix for the spin.number() user function, the number can be None to reset the values.
        * Fix for the script() user function, the function intro flag at the end of executing an external script was not being restored.
        * Improvements to the optimisation tests (bug #14173, bug #14174, bug #14175, bug #14176, bug #14177, bug #14182).
        * Fix for the R_euler_zyz() rotation matrix function.
        * Fix for the R_to_axis_angle() rotation matrix function.
        * Prevented __find_bonded_atoms() from connecting protons in the internal PDB reader.
        * Fixes for print_frame_order_2nd_degree() for when NaN is encountered.
        * Fix for the compile_2nd_matrix_iso_cone() frame order function.
        * The func_iso_cone_elements() method was been replaced with func_iso_cone() in the frame order analysis.
        * Fix for the delete function which was failing if the file was missing.
        * Fix for the test suite, the temporary files were not always deleted if a .bz2 extension was added.
        * Fix for the reading of Xplor NOE data when a line starts with '#'.
        * Fix for the Dasha and Modelfree interfaces for when spins have too little data (bug #14428).
        * Fixes for the RDC and PCS read() functions, the alignment tensor ID had the same variable name as the spin ID.
        * Fixed the PDF manual compilation (bug #14464).
        * Fix for the retrieval of bond vectors for the N-state model.
        * Fixes for the dx.map() user function interface.
        * Epydoc docstring fixes.
        * Fix for when the selection string (i.e. spin_id) is unicode (bug #14872).
        * Fix for the PCS back calculation for when no weights are given.
        * The last weight in the'fixed' and 'population' N-state models, if supplied, was being converted to zero (1 - sum(weights)) hence the last state/structure was not being included.
        * Added the missing user functions in the mf_multimodel.py sample script (bug #14885).
        * Fix for the Monte Carlo simulations in the full_analysis.py script (bug #14941).
        * Fix for optimisation of models tm4 to tm8 in the mf_multimodel sample script when over-fitting occurs (bug #15050).
        * Removed the beta angle folding from the frame order module as it was failing.
        * Fix and updates to the generic_fns.angles.wrap_angles() function.
        * Fix for the internal structural object PDB writing - the TER records are between the ATOM and HETATM records.
        * Fixed a final model-free analysis failure in the d'Auvergne protocol, the auto-analysis behind the full_analysis.py script (bug #15874).
        * Fixes for the N-state model when RDC or PCS data is missing.
        * Fixed the Q-factor calculating functions to handle missing RDC or PCS lists.
        * Fix for the 'population' N-state model - the probabilities of each state was being set to that of the last state.
        * Constraints must be used at all times in the 'population' N-state model optimisation.
        * For the N-state model 'fixed' and 'population' models, if too many tensors are initialised in comparison to PCS and RDC alignments, then the parameter vector or parameter number was not being correctly assembled.
        * Fix for when structural models are loaded out of order.
        * Fix for the 'population' N-state model whereby the last probability can have a negative value.
        * The infinite looping around the universal solution in the dauvergne_protocol module is now being caught (for the full_analysis.py script).
 


Version 1.3.4
(12 August 2009, from /1.3)
http://svn.gna.org/svn/relax/tags/1.3.4

    Features:
        * The file format of peak intensity lists is now automatically detected (supporting Sparky, XEasy and NMRView).
        * Initial support for a generically formatted peak intensity file (note, this is not yet usable).
        * Error analysis for peak intensities is significantly improved with support for baseplane RMSD, a subset of spectra replicated, and all spectra replicated for both peak heights and peak volumes.
        * NOESY distance restraints (in Xplor or generic format) can now be used in the N-state model via the noe.read_restraints() user function.
        * Psuedo atoms/spin containers are now supported via the spin.create_pseudo() user function (used for the NOE distance restraints).
        * Support for multiple molecules and/or multiple models within relax.
        * Multiple molecules (as one or more PDB files) can now be read in as individual molecules of different models.
        * Multiple models (as one or more PDB files) can now be read in as multiple molecules of the same model.
        * The internal PDB writer can now generate a file with multiple molecules and multiple models.
        * The N-state model with fixed and equal probabilities is now supported.
        * The bond length values for RDCs are now hard-coded (from Ottiger, M. and Bax A., J. Am. Chem. Soc. (1998), 120, 12334-12341).
        * Added the Bruker ncproc parameter to handle Topspin's integer scaling of FID intensities (to the spectrum.read_intensities() user function).
        * Hybridisation support, present in relax 1.2, has returned allowing data pipes to be merged (i.e. to hybridise two model-free data pipes with a different diffusion tensor for sets of spins).
        * The initial code for relaxation dispersion analyses has been added (note, this is not yet usable).
        * Initial support for the new Frame Order theories, using the isotropic cone model for RDC data of domain dynamics.
        * MOLMOL macro support for plotting model-free parameter values onto the structure has returned.

    Changes:
        * The XH bond vector distribution PDB and Pymol representation is now restored.
        * The new user function class 'spectrum' contains all functions associated with spectral data.
        * Spectral data is now identified by unique spectrum ID strings.
        * The noe.read() and relax_fit.read() user functions have been merged into spectrum.read_intensities().
        * The relax_fit.mean_and_error() user function is now called spectrum.error_analysis().
        * The noe.error() user function is now called spectrum.baseplane_rmsd().
        * The new spectrum.integration_points() user function is used to specify the number of points used in a volume integration.
        * The R1 and R2 relaxation time period is now specified using relax_fit.relax_time().
        * grace.write() will now show a warning when an empty file is being created.
        * Replicated spectra are now specified explicitly via spectrum.replicated().
        * Extensive code base clean up - including formatting, unused imports, comments, typos, etc.
        * Complete redesign of the structural information storage.
        * Massive speed up of the structure.vectors() user function.
        * More element types of standard protein PDB atom names are identified (to support PDB files with a blank element column).
        * Information is now printed out when reading RDCs and PCSs to aid the user identify usage faults.
        * The RDC and PCS data is now checked before being loaded into relax.
        * The N-state model grid search now handles alignment tensor parameters.
        * For better optimisation, the grid search lower bound for alignment tensor elements has changed from 0 to -1e-3.
        * Improvement to the algorithm for determining attached atoms in the internal PDB reader - a 2 rather than 1 Angstrom radius sphere is now being searched.
        * The molecule.name() user function can now name unnamed molecules.
        * The diagonalised alignment tensor is now created.
        * Spin numbers can now be set to None, adding support for polymers where the atom name rather than number is used.
        * The Q factor is now calculated as Clore's R-factor divided by N, matching the Pales default mode (both Q factors are now calculated and stored).
        * The force flag has been introduced to the mol/res/spin naming and numbering user functions, where the default is now not to overwrite.
        * Redesign of the spin.create() and residue.create() user functions - respectively residue and molecule names and numbers are used instead of the res_id and mol_id arguments, allowing residues and molecules to be created as needed.
        * Modified the full_analysis.py script to perform 500 Monte Carlo simulations and turned on automatic looping.
        * Support for non-identical sequences in different PDB files within the same data pipe (only as different molecules, not different models).
        * Modified the structure.vectors() user function to fail if no vectors are found, saving the user a lot of sanity when fixing a non-functional script.
        * A quadratic, flat-bottomed well potential has been added for the NOE distance restraints.
        * For the N-state model, a default of inverse sixth power averaging of NOE distance restraints is being performed.
        * The pcs.centre() user function can now accept pseudo-atoms.
        * The pcs.centre() user function can now handle multiple paramagnetic centres.
        * The new maths_fns.rotation_matrix.R_axis_angle() function generates a rotation matrix from the axis-angle notation.
        * The new maths_fns.rotation_matrix.random_rot_axis() and maths_fns.rotation_matrix.R_random_axis() functions are used to generate random rotation matrices.
        * The new maths_fns.rotation_matrix.R_random_hypersphere() function generates a pure random rotation matrix.
        * The new maths_fns.rotation_matrix.quaternion_to_R() function generates a rotation matrix from a quaternion.
        * The new maths_fns.kronecker_product.kron_prod() function is used to calculate the Kronecker product.
        * Converted the user function n_state_model.set_type() to align_tensor.reduction().
        * Renamed n_state_model.set_domain() to align_tensor.set_domain().
        * The statistics ordering has been improved when profiling.
        * align_tensor.init() can now accept any type of float or int (python or numpy).
        * Removed the checks to see if the RDC or PCS data is already loaded, allowing sequential loading by a few calls to rdc.read() and pcs.read().
        * Large improvements to the information printed by the align_tensor.display() user function.
        * Removed a check for the presence of the alignment tensor so that align_tensor.init() can be used to reset the tensor values.
        * Created the six transpose functions for rank-4, 3D tensors in maths_fns.kronecker_product.transpose_ij().

    Bugfixes:
        * A bug in the Monte Carlo simulations for relaxation curve-fitting has been fixed (bug #12670).
        * Fixes for the Pymol PDB file opening and pymol.cartoon() user function.
        * The molecular centre of mass is now correctly calculated.
        * Grace plots (http://plasma-gate.weizmann.ac.il/Grace/) were sometimes corrupted due to data being stored in numpy arrays and not Python lists (bug #12679).
        * Fix for the value.read() user function, the directory and 'sep' arguments were being ignored.
        * Multiple failures of structure.load_spins() for different PDB file layouts have been fixed (bug #12735).
        * Model-free optimisation failures on Mac OS X for PowerPC (bug #12573).
        * Many PDB file reading fixes for different multi-molecule/multi-model formats.
        * The '-' character is now allowed in molecule, residue, and spin names (was a bug if the file name contains a '-' character).
        * Bug fixes for handling molecules other than proteins and RNA via the Scientific python PDB reader.
        * The internal PDB reader no longer considers the END record to be a molecule.
        * Fix for a rare circular import failure of the RelaxError and RelaxWarning systems when running with the --debug command line flag.
        * Significant simplifications of the RelaxError system, fixing a state saving bug with --debug.
        * Fix for the retarded Scientific python PDB reader splitting a perfectly good molecule into 2 when it can't recognise a residue type.
        * Linear constraints and now supported for the N-state models without probabilities.
        * Modified the full_analysis.py script to name spins if the sequence data contains no spin name info.
        * All column arguments now default to None for the RDC and PCS reading so if residue numbers are non-existent, then they will not be read from the default column.
        * Bug fixes for the N-state model with N = 1 (allowing relax to mimic Pales http://www.mpibpc.mpg.de/groups/griesinger/zweckstetter/_links/software_pales.htm).
        * Bug fix for the PCS alignment tensor fitting, the paramagnetic-nuclear spin distance was being incorrectly determined.
        * The Q factors for the RDCs and PCSs were completely incorrect (found by comparing to Pales).
        * All the value.*() user functions have now been converted from the relax 1.2 to the relax 1.3 design.
        * Fixes for some circular import issues in generic_fns.minimise and generic_fns.value.
        * All the relax_data.*() user functions have now been converted to the relax 1.3 design.
        * Bug fix for the spin.copy() user function, non-empty spin containers are no longer overwritten if the name and num are set to None.
        * Fix for the latex_mf_table.py sample script (bug #13163).
        * Rex values in XML results file not in s-1 (bug #13162).
        * Fix for the structure.create_diff_tensor_pdb() user function which was creating weird shaped ellipsoid diffusion tensor representations when 'alpha' and 'beta' were unequal (bug #13032).
        * Sparky assignments such as '004N-H' are now handled.
        * Fixed a bad apostrophe character causing the 'full_analysis.py' script to fail.
        * Removed a check disallowing multiple steady-state NOE data sets at the same spectrometer frequency.
        * Bug fix for the results reading from_xml() method, the molecule name was being evaluated causing results.read() to fail.
        * Fixes for the model-free Monte Carlo simulation methods for deselected spins.
        * Models with high te values (>200 ns) were not being eliminated in the full_analysis.py sample script (bug #13259).
        * Monte Carlo simulations were failing in the model-free.py sample script (bug #13442).
        * The model-free minimisation statistics are no longer reset by the Monte Carlo simulation setup.
        * A number of bug fixes for Python 2.6 support.
        * Model selection between data pipes of different type is now allowed.
        * Bug fix for the maths_fns.rotation_matrix.R_2vect() function as the rotation axis is not always of unit length.
        * The diffusion tensor geometric object PDB representation is now correctly generated.
        * The isotropic cone geometric object PDB representation is now correctly generated.
        * The Hetrogen section was failing with MC simulations in the structure.write_pdb() user function.
        * pymol.cartoon() was failing when multiple proteins were loaded.
        * Bug fix for the maths_fns.rotation_matrix.R_to_axis_angle() function, the axis needs to be normalised.
        * Bug fixes for the grace.write() user function.
        * Monte Carlo simulations failed when all parameters except for the diffusion tensor were fixed.
        * The diffusion and alignment tensor *_sim and *_err elements are now present and read from a results file.
        * The align_tensor.matrix_angles() user function now avoids NaN problems through arccos of numbers > 1.
        * Bug fixes for the updating of the diffusion tensor MC simulation data structures.
        * Fix for the copying of diffusion tensors data structures.
        * relax and the sample scripts are more compatible with non-Unix operating systems by using the Python os.sep and os.pardir rather than '/' and '..' for directory separators and the parent directory.
        * Caught a NaN problem in the N-state model, RDC Q factor code causing failures in MS Windows.



Version 1.3.3
(29 November 2008, from /1.3)
http://svn.gna.org/svn/relax/tags/1.3.3

    Features:
        * Dasha can be run from within relax again.
        * Art Palmer's Modelfree can be run from within relax again.
        * OpenDX execution and control is once again supported.
        * NMRView peak lists are now supported.
        * XEasy peak lists are again supported.

    Changes:
        * Internal relax cleanups by the addition of the specific model_loop() method - this should eliminate a series of potential hidden bugs.
        * The results.write() and results.display() now only support XML output.
        * More information is now extracted from the Modelfree mfout files.
        * The version of the Modelfree program is checked and if it is an old, buggy version, relax will refuse to execute it.
        * The system tests can now handle the sometimes large differences in Modelfree results between the GNU gcc and Portland C compiler versions.
        * Fixes and improvements to much of the API documentation.

    Bugfixes:
        * A failure of the minimisation set() function has been fixed.
        * The reset() user function now works again.
        * Fixes to the relax data store methods add(), to_xml() and from_xml().
        * Many fixes for the support of Art Palmer's Modelfree program.
        * The mapping of the global parameter space (diffusion tensor, etc.) for visualisation in OpenDX has been fixed.
        * state.save() no longer fails after running state.load() (bug #12437).
        * Sparky peak lists with the assignment '?-?' are now handled properly (bug #11913).
        * Error analysis in relaxation curve-fitting was incorrectly implemented with standard deviation rather than variance averaging (bug #12456).
        * A number of fixes for the LaTeX table generating sample script.
        * Fixes for the teeing and logging via the -l and -t command line arguments (bug #12489).
        * Fix for when XH bond vector data from a PDB file is missing for a spin system (bug #12487).
        * Many fixes for when structural data is missing.
        * The relax script is no longer overwritten if the log or tee file is not specified on the command line (bug #12498).
        * Missing RelaxError failure in the sequence handling code (found when trying to solve bug #12582).
        * A failure in the results.write() user function has been fixed (bug #12582).
        * Model selection no longer fails if no model is ever selected.
        * Model selection was failing if spins were deselected (bug #12591).
        * The directory name can now be part of the file name argument to results.read() (bug #12588).
        * Optimisation of only the diffusion tensor after calling fix() was failing if some spins were deselected (bug #12607).
        * The internal PDB reader was failing when the PDB file contained CONECT records (bug #12637).



Version 1.3.2
(8 October 2008, from /1.3)
http://svn.gna.org/svn/relax/tags/1.3.2

    Features:
        * The NOE analysis has been converted to the new design and is fully functional again.

    Changes:
        * Internal abstractions to the relax data store by using the generic_fns.pipes API.
        * Added more literature references to the 'full_analysis.py' script.
        * Eliminated Monte Carlo simulations are better identified during user function execution.

    Bugfixes:
        * The generation of the cone geometric object for the N-state model is fixed.
        * Fixes for the relax_curve_diff.py and latex_mf_table.py sample scripts (identified by the relax data store abstraction).
        * Fixed the reading of relax 1.2 model-free results files (identified by the relax data store abstraction).
        * Various PDB file loading issues fixed.
        * value.set() no longer fails when the parameter being set already exists (bug #12406).
        * Fix for the bug whereby model elimination does nothing for model-free models.  This fix may solve other model-free related issues (bug #12407).
        * Model elimination no longer fails when no diffusion tensor is loaded (bug #12408).
        * The error when loading the PDB file through the reading of the results file in the 'final' stage of the 'full_analysis.py' sample script is fixed (bug # 12409).
        * Model elimination is fixed in the 'full_analysis.py' script.
        * The fix() user function works again when the element argument is set to 'all'.
        * Fix for the duplication of sequence data during model selection.
        * Monte Carlo simulations were failing due to a missing sequence error (bug #12410).
        * The model elimination error "AttributeError: 'SpinContainer' object has no attribute 'params'." has been fixed (bug #12411).
        * A missing global chi-squared value was causing failure of global model selection (bug #12412).
        * Monte Carlo simulation elimination was removing the simulation not from the affected spin but from all spins (bug #12416).
        * Fix for the failure of the value.write() user function in all analysis types (bug #12418).



Version 1.3.1
(28 September 2008, from /1.3)
http://svn.gna.org/svn/relax/tags/1.3.1

    Features:
        * Complete redesign of relax (https://mail.gna.org/public/relax-devel/2006-10/msg00053.html).
        * Extension of the Grace plotting abilities to include series data such as relaxation exponential curves.
        * For easy reference, all physical constants have been shifted to the 'physical_constants.py' module.
        * Complete overhaul of the handling of structures with the introduction of a structural object API.
        * An internal structural object has been created, complete with PDB reading and writing methods, to optionally replace the Scientific python PDB object.
        * Large improvements to the API documentation by the use of epydoc formatted docstrings.
        * All spins can be looped over simply by using the spin_loop() generator function.
        * Molecules, residues, and spins are now selected by the new syntax of the spin identification string.
        * Improvements and simplifications to the 'full_analysis.py' script with all user modifiable variables shifted to the top of the script as global variables.
        * Automatic looping until convergence has been added to the 'full_analysis.py' script to further simplify usage.
        * Setting the type of nucleus is now done with the value.set() user function on a spin-by-spin basis.  This is important for RNA, small molecules and protein analyses with Ca and N data.
        * A new analysis type, the N-state model for interpreting domain motions using RDC and PCS data, is now supported.
        * The mechanical pivot-CoM analysis of the N-state model and associated cone image construction is included.
        * The consistency testing code has been ported from the 1.2 line.
        * The results file has been converted to the versatile XML format.
        * All analysis types, present and future, are automatically supported through the reading and writing of the XML results file.
        * The XML results file stores floats at full 64 bit precision in an XML attribute using the IEEE-754 byte array.

    Changes:
        * The RelaxError and RelaxWarning systems have been redesigned.  The objects are no longer placed into __builtin__ but must now be imported.
        * The unit and system test frameworks have been expanded to 1046 and 55 tests respectively covering most aspects of relax usage.
        * The inclusion of headers in the sample scripts to identify the author and age of the script.
        * Conversion of the relax data storage object into a singleton.  Rather than accessing 'self.relax.data', the singleton is now imported as needed.
        * Unit tests can now be run individually.
        * The optimisation code has been spun out into its own project, minfx (https://gna.org/projects/minfx/).  This is now a dependency.
        * The Boolean values True and False are now used instead of 1 and 0 for user function arguments.
        * The class methods of the 'generic_fns' package have been converted to module functions for greater API flexibility.
        * Complete redesign of the diffusion tensor object in the relax data store.  Many diffusion tensor attributes are calculated on the fly when accessed.
        * The 'specific_fns' package has been redesigned with the API for retrieving analysis specific methods tidied up.
        * The inevitable switch from Numeric python to numpy has occurred.
        * The system tests and unit tests can be run separately.
        * All STDOUT and STDERR output is caught by the test suite and only printed if the test fails.
        * The system tests use the unit test framework to significantly simplify the addition of new tests.
        * User scripts can now be used directly as system tests.
        * All threading code has been eliminated in preparation for replacement by the multi_processor code.
        * The precision of the 15N gyromagnetic ratio input into Art Palmer's Modelfree4 program has been increased.
        * Scientific python is no longer an essential dependency.
        * The 'unselect' user function class has been renamed to 'deselect'.
        * Big updates to the relax manual.
        * PDB files can be specified without the '.pdb' ending.

    Bugfixes:
        * The unit test and system test frameworks are now functional.
        * The failure of reduced spectral density mapping has been identified and fixed (bug #9238, bug #9562).
        * The second set of extended model-free formulae were accessing undefined functions (bug #9189).
        * Docstring fetching issues with Python 2.5 have been fixed (bug #9390).
        * The sample script for placing model-free results into a LaTeX table now works (bug #10189).
        * The default parameter values for relaxation curve fitting were incorrectly set.
        * Security:  Replaced the insecure os.tempnam() with tempfile.mktemp().
        * ZeroDivisionError fix for model elimination and Monte Carlo simulation elimination (bug #11004).
        * The handling of spins with missing XH bond vectors has been fixed (bug #11378).
        * The relax_data.display() user function is now functional again (bug #11383).
        * MS Windows with Python 2.5 is now supported.



Version 1.3.0
(19 February 2007, from /1.3)
http://svn.gna.org/svn/relax/tags/1.3.0

    Features:
        * Implementation of the PDB geometric representation of the Brownian rotational diffusion tensor using 'structure.create_diff_tensor_pdb()'.
        * Added a sample script for the creation of the PDB representation of the diffusion tensor.
        * Addition of the ability to calculate the centre of mass of the selected residues (not available as a user function).
        * The addition of PDB writing capabilities (not available as a user function).
        * Creation of the 'molmol.command()' user function to send Molmol commands to a running instance of Molmol.
        * Creation of the 'molmol.ribbon()' user function to apply the Molmol ribbon style (which is equivalent to clicking on 'ribbon' in the Molmol side menu).
        * Creation of the 'molmol.tensor_pdb()' user function for displaying the PDB geometric object of the diffusion tensor in Molmol over a loaded structure.
        * Preliminary support for PyMOL.
        * Creation of the 'pymol.view()' user function for launching PyMOL.
        * Creation of the 'pymol.cartoon()' user function for hiding everything, showing the cartoon representation, and colouring the cartoon by secondary structure.
        * Creation of the 'pymol.tensor_pdb()' user function, the equivalent of 'molmol.tensor_pdb()'.
        * A unit test framework for the test suite has been created and a few tests have been written (accessible through the --test-suite or --unit-test command line arguments).
        * Addition of the 'structure.create_vector_dist()' user function for creating a PDB representation of the XH bond vectors of selected residues from the structure.
        * Addition of the 'pymol.vector_dist()' user function for displaying the PDB representation of the XH vector distribution overlain over the structure within PyMOL.

    Changes:
        * The unmodified Hessian and turning the line search off are now specified by different regular expressions. (see task #3630)
        * Splitting of the 'pdb()' user function into 'pdb.read()' and 'pdb.vectors()' (these have been subsequently renamed). (see task #3838)
        * Created the JOBS file to describe the roles of the relax manager positions.
        * Removal of apply(func, args) calls from the minimisation code.
        * Addition of the io.file_root() function.
        * Addition of the RelaxImplementError for internal use.
        * Added the text "re-run relax with the '--debug' flag" to the RelaxFault error class.
        * Redesign of the diffusion tensor data structure 'self.relax.data.diff' for the automatic calculation of diffusion tensor parameters, vectors, and matrices when parameters are set or changed.
        * The 'pdb' user function class has been renamed to 'structure'.
        * The 'init_data()' user function has been renamed to 'reset()'.

    Bugfixes:
        * Fixed the selection of nucleic acids by name as Scientific python was prefixing 'R' to the single letter codes.



Version 1.2.15
(27 November 2008, from /1.2)
http://svn.gna.org/svn/relax/tags/1.2.15

    Bugfixes:
        * Problems with the value.write() user function have been fixed (see bug #12418).
        * Error analysis in relaxation curve-fitting was incorrectly implemented with standard deviation rather than variance averaging (see bug #12456).



Version 1.2.14
(9 August 2008, from /1.2)
http://svn.gna.org/svn/relax/tags/1.2.14

    Changes:
        * Improvements to the relax manual.
        * Copyright statements added to the sample scripts for identifying the author and date of the script.

    Bugfixes:
        * The C modules can now be compiled on Windows with Python 2.5.
        * Fixes for the calculation of the F_eta value in the consistency testing analysis.



Version 1.2.13
(19 April 2008, from /1.2)
http://svn.gna.org/svn/relax/tags/1.2.13

    Features:
        * Consistency testing has been added allowing datasets recorded at different magnetic fields to be checked using the consistency function values J(0), Feta, and FR2.
        * The 'full_analysis.py' script can now perform a model-free analysis in the absence of structural data.

    Changes:
        * Better support for MS Windows Vista in the scons build system and the relax introduction.
        * A file listing the unresolved residues is no longer necessary for running the 'full_analysis.py' script.
        * A few small documentation additions and fixes.

    Bugfixes:
        * The parameters Dpar and Dper are now properly checked upon initialisation of this spheroidal diffusion tensor.
        * Initialisation of an empty diffusion tensor to the default values of zero now works.
        * The default value of the Iinf relaxation curve fitting parameter can now be set.
        * Fix for the complete failure of the reading in of Art Palmer's Modelfree 4 'mfout' results file (see bug #8997).
        * Fix for a rare ZeroDivisionError during Monte Carlo simulations (see bug #11004).
        * relax no longer fails if XH bond vectors cannot be extracted from a PDB file (see bug #11378).
        * The relax_data.display() user function no longer fails (see bug #11383).
        * The selection of model-free model 'm0' causes Monte Carlo simulations to fail resulting in zero errors from that residue onwards (see bug #11476).
        * Another column fusion bug in Modelfree 4's 'mfout' results file can be handled (see bug #11483).
        * Optimisation fix - the steady-state NOE value, gradient, and Hessian is now properly calculated when an order parameter of exactly 0.0 is encountered.



Version 1.2.12
(17 November 2007, from /1.2)
http://svn.gna.org/svn/relax/tags/1.2.12

    Features:
        N/A

    Changes:
        N/A

    Bugfixes:
        * The 'latex_mf_table.py' sample script now works (see bug #10189).
        * The missing 'num_ri' failure when writing the model-free and J(w) mapping results files has been solved (see bug #10323).
        * Model elimination was failing in certain situations when applied to the global models (see bug #10320).



Version 1.2.11
(21 October 2007, from /1.2)
http://svn.gna.org/svn/relax/tags/1.2.11

    Features:
        * The Grace plotting abilities have been extended, especially concerning relaxation exponential curve-fitting.
        * A sample script has been added to plot the difference between the measured and back calculated peak intensities.
        * Automatic looping over iterations in the 'full_analysis.py' sample script is now possible.

    Changes:
        * The 'full_analysis.py' sample script has been significantly improved with all user modifiable options shifted to the top of the script.
        * The default CSA value is now -172 ppm.

    Bugfixes:
        * The previous release had problems reading results files from relax versions 1.2.0 to 1.2.9, but now results files from all versions can be read (see bug #8248).
        * The synopsis of the system/functional tests now says '[ Failed ]' if one the tests fails (see bug #8682).
        * relax now works with Python 2.5 (see bug #9093).
        * The writing of the model-free results file, which failed under certain circumstances because of the 'heteronuc' and 'proton' attributes, has been fixed (see bug #8996).
        * The problem whereby there is data loss for deselected residues when using 'results.write()' followed by 'results.read()' has been resolved (see bug #8953).
        * Relaxation data can now be read if deselected spin systems have a relaxation data value or error value set to 'None' (see bug #9101).
        * The fatal bug of the reduced spectral density mapping values being incorrectly calculated has been fixed (see bug #9238).
        * When using the alternate model-free parameter set {S2f, tf, S2s, ts}, the incorrect functions were being called (see bug #9189).
        * A second fatal problem in the reduced spectral density mapping code, the heteronuclear frequency being overwritten by that of the proton, has been fixed (see bug #9259).
        * Another problem with relax and Python 2.5, because of the Scientific package, has been resolved (see bug #9390).
        * The XH bond length is now correctly set in the reduced spectral density mapping analysis (see bug #9562).
        * The convergence test in the 'full_analysis.py' sample script was failing if spin systems were deselected (see bug #9892 and bug #10022).



Version 1.2.10
(12 January 2007, from /1.2)
http://svn.gna.org/svn/relax/tags/1.2.10

    Features:
        * Addition of tests to the 'full_analysis.py' script for the identification of convergence.
        * Different columns can be specified for the residue number in the 'select.read()' and 'unselect.read()' user functions.
        * More advanced selection of spin systems or residues is possible through the use of the Boolean operators 'OR', 'NOR', 'AND', 'NAND', 'XOR', or 'XNOR'.
        * Addition of a sample script for the creation a LaTeX longtable of the model-free results.
        * The rows of the model-free and reduced spectral density results files are no longer truncated for deselected spin systems, hence all data is now stored in the results file. (see bug #8059)

    Changes:
        * The relax core design diagram in the development chapter of the manual has been updated.
        * Three flow diagrams have been added to the relax manual detailing the steps of different model-free analysis protocols.
        * Spin systems are now identified when deselected by the 'eliminate()' user function.
        * The model-free Molmol cutoff for fast and slow motions has been changed from 100 to 200 ps.
        * For the clarification of bug #8059 a RelaxNoTensorError is raised instead of returning None when no diffusion tensor data is present.
        * The Scons target 'source_dist' now creates and GPG signs both the 'tar.bz2' and 'zip' source distribution packages. (see task #4087)

    Bugfixes:
        * The C modules can now be compiled on Mac OS X. (see bug #7670)
        * The order of the proton and heteronucleus dimensions and number of header lines in the XEasy text file is now automatically detected. (see bug #7676)
        * The 'full_analysis.py' script now throws a RelaxError if only one round of optimisation of the global model has been executed. (see bug #7787)
        * The model selection of the global model in the 'full_analysis.py' script has been fixed. (see bug #7863)
        * Monte Carlo simulations no longer fail if the local tm global model has been selected in the 'full_analysis.py' script. (see bug #7875)
        * The Monte Carlo simulation data in the model-free results file is now correctly read back into the program. (see bug #7755)
        * The Monte Carlo simulation state used to be turned on after reading a results file containing simulations. (see bug #7890)
        * After reading model-free results files, model selection would fail as the heteronucleus and proton data structures did not exist. (see bug #7891)
        * The model-free Molmol fast correlation time macro (te < 100 ps and tf) no longer sets the bond length to zero when no parameter is present.
        * The docstring fetching Scons target no longer fails. (see bug #8182)
        * The model-free 'S2 difference stored in a new run' test of the test suite now passes. (see bug #8183)
        * The 'source_dist' Scons target now works on MS Windows. (see bug #7678)
        * The MS Windows BAT file execution failure "python: can't open file 'C:\Program': [Errno 2] No such file or directory" has been fixed. (see bug #8201)
        * The reading in of the results files from relax versions 1.2.0 to 1.2.9 in which deselected spin system lines are truncated now works. (see bug #8248)



Version 1.2.9
(9 November 2006, from /1.2)
http://svn.gna.org/svn/relax/tags/1.2.9

    Features:
        N/A

    Changes:
        * For Mac OS X compatibility, the interpreter has been changed from '/usr/bin/python' to '/usr/bin/env python'.

    Bugfixes:
        * The infinite chi-squared RelaxError when the chi-squared value is zero has been fixed. (see bug #7641)
        * Profiling is now functional again. (see bug #7677)



Version 1.2.8
(4 November 2006, from /1.2)
http://svn.gna.org/svn/relax/tags/1.2.8

    Features:
        * Preliminary support for RNA/DNA. (bug #7241)
        * Significant improvements to the SCons build system (see 'scons --help').
        * Expansion and improvement of the relax development chapter.
        * The grace.write() user function works with reduced spectral density mapping. (task #4002)

    Changes:
        * MS Windows installation instructions have been added to the manual.
        * The RelaxWarning system has been added to standardise warning messages.
        * The relax manual now describes the test suite. (task #3781)
        * The 15N CSA values in the sample scripts are now all -172 ppm.
        * The ambiguity cased by supplying the option 'None' together with Newton optimisation has been resolved in the documentation. (task #3630)
        * Optimisation tests have been added to the test suite.

    Bugfixes:
        * Model selection between the global diffusion models no longer fails if all residues of the local tm models have been deselected by model elimination. (bug #7192)
        * The 'angles.py' sample script no longer fails when residue specific relaxation data is missing (corrupt input data). (bug #7224)
        * Prior to executing Modelfree4, Dasha, Molmol, Grace, or OpenDX, tests are run to determine if the binary exists, is executable, and is in the system path. (bug #7225)
        * Model elimination when using the model-free model 'm0' no longer fails. (bug #7226)
        * The strict checking of the Da and Dr diffusion tensor parameters has been relaxed to allow for optimisation imprecision. (bug #7297)
        * The reading of Modelfree4 mfout results files no longer fails when residue specific relaxation data is missing (corrupt input data). (bug #7277)
        * If optimisation returns an infinite value or a NaN value, these are now caught and a RelaxError thrown. (bug #6503, task #3621)
        * The sigma(NOE) equations of Chapter 8 of the manual have been fixed. (bug #7402)
        * Files containing relaxation data not consisting of exactly 4 columns will now be read. (bug #7583)
        * Model-free results files from relax versions prior to 1.2.5 are now properly read. (bug #7587)
        * Model selection between the global diffusion models does not fail when the local tm models are included. (bug #7616)



Version 1.2.7
(18 September 2006, from /1.2)
http://svn.gna.org/svn/relax/tags/1.2.7

    Features:
        * The C modules now compile without problem on MS Windows.
        * The MS Windows binary distribution packages are now successfully built using the SCons build system.
        * The batch file 'relax.bat' has been created for running relax from the MS Windows command prompt.
        * The program introduction width is now 80 characters in MS Windows for proper display from the command prompt.

    Changes:
        * The program state is saved when a RelaxError occurs in debugging mode.
        * KeyboardInterupt during script execution in debugging mode will print the Python traceback.

    Bugfixes:
        * The sconstruct script no longer fails in MS Windows. (bug #6980)
        * Model selection is now functional on all operating systems. (bug #6873).
        * The use of the Unix only class 'Popen3' has been removed to allow relax to function on all non-Unix operating systems. (bug #6841)
        * If the XH bond vector length is 0, the vector is set to None rather than raising a RelaxError. (partial fix to bug #6503)
        * Fix for the sconstruct script failure on MS Windows due to ImportErrors caused by importing Unix specific code. (bug #6841)
        * Fix for ImportErrors in MS Windows preventing relax from running. (bug #6841)



Version 1.2.6
(21 July 2006, from /1.2)
http://svn.gna.org/svn/relax/tags/1.2.6

    Features:
        N/A

    Changes:
        N/A

    Bugfixes:
        * Added the missing PDB file used by one of the OpenDX tests of the relax test-suite. (bug #6404)
        * Fixed the fatal devnull import failure for Python versions < 2.4. (bug #6403)



Version 1.2.5
(20 July 2006, from /1.2)
http://svn.gna.org/svn/relax/tags/1.2.5

    Features:
        * The data analysis chapter has been split into four:  The NOE, relaxation curve-fitting, model-free, and reduced spectral density mapping chapters.
        * A section called the 'The core design of relax' has been added to the the development chapter of the manual.
        * The 'Values, gradients, and Hessians' chapter of the manual is now complete.  These are all the equations used during optimisation.
        * The Hessian kite diagram and the gradient construction diagram have been added to the 'Values, gradients, and Hessians' chapter of the manual.

    Changes:
        * The distribution archives now unpack to the directory 'relax-x.x.x' rather than just 'relax', where x.x.x is the version number.
        * All chapters of the manual have been edited and proofed.
        * The Sparky and XEasy peak intensity reading functions have been split to allow the easy addition of new peak intensity file types.
        * Test of AIC model selection between diffusion tensors added to the test suite.  (To catch bug #5746)
        * Changing of the local tm parameter name of 'tm' to 'local_tm' to distinguish it from the global tumbling time 'tm'. (Preparation for fixing bug #6384)

    Bugfixes:
        * Fix of bug where self.relax.data.select_sim was treated as a list. (bug #5977)
        * The value.copy() function now handles the value of None. (bug #6288)
        * The global flag is now set by the relax_data.delete() function. (bug #6383)
        * The model-free model_statistics() function now tests for the presence of relaxation data. (bug #5806)
        * Sorting of global from local parameters in 'generic_fns/value.py' simplified and fixed by changing the parameter name 'tm' to 'local_tm'. (bug #6384)
        * Model-free parameters now set in the OpenDX mapping test of the test-suite. (bug #6388)
        * Failure of model elimination because of a 'local_tm' and 'tm' mix up. (bug #6389)
        * Modification of the model-free calculate() function and elimination of the 'combined' flag from the self.model_statistics() function. (bug #5746)



Version 1.2.4
(2 May 2006, from /1.2)
http://svn.gna.org/svn/relax/tags/1.2.4

    Features:
        * Added elimination of Monte Carlo simulations to the sample scripts.
        * Creation of the relax test suite 'relax --test-suite'.
        * Creation of the committers file.
        * The hyperref LaTeX package is now used in the relax manual.
        * Addition of a chapter called 'Open source infrastructure'.
        * Rewrite of the 'Development of relax' chapter.
        * Addition of the user function 'run.hybridise()'. (task #3122)
        * The user function 'relax_data.read()' no longer deselects residues when no data is encountered. (bug #5501)
        * Residues are deselected by the user functions 'grid_search()', 'calc()', and 'minimise()' if k > n or if there is less than 3 data sets. (bug #5501)
        * Mapping parameter values onto the structure through Molmol macros. (task #3146)
        * Added support for arbitrary colour gradients in the Molmol macros. (task #3146)
        * Addition of a file for colour operations.  All X11 colours and all Molmol colours can be selected by name. (task #3146)

    Changes:
        * The 'full_analysis.py' sample script now only searches over 6^6 rather than 11^6 grid points for the ellipsoid diffusion tensor to speed up the analysis.
        * Updated the manual to replace the references to 'make' with 'sconstruct'.
        * Extension of the installation chapter.
        * Changed the square and round brackets to curly brackets and replaced ':' with '=' in the user function docstrings.
        * All the model-free Molmol functions have been moved into their own class Molmol.
        * The null device can now be opened instead of a file for writing by passing 'devnull' as the name.
        * Updated the release checklist so that the directory 'relax-x.x.x' is included in the distributions rather than just 'relax'.
        * Removed the bugs file 'docs/BUGS'.

    Bugfixes:
        * Small bugs in the sconstruct script have been removed.
        * The value reading function can now handle rows which contain no data.
        * The ellipsoid diffusion tensor was being incorrectly initialised in the 'full_analysis.py' script.
        * Another Numeric version issue.  The model m0 with no parameters which used to be handled okay by the grid search and minimisation code was failing due to changes in Numeric.
        * In certain situations, the angle folding function which is called after model-free minimisation used the wrong run name.
        * Fixed the -fPIC option segfault problem on some Linux systems. (bug #5473)
        * Changed the tm grid search which was between 6-12 ns to be between 1-12ns.
        * Fixed some grammar in the intro chapter of the manual.
        * Fixed a bug in the model-free sample script in the spheroid diffusion tensor function.
        * Removed the spaces in front of the \index{} commands from the manual LaTeX source files.
        * The diffusion parameters 'Diso', 'Dper', 'Dpar', 'Dratio', 'Dx', 'Dy', and 'Dz' are generated on the fly. (bug #5559)
        * Fixed the spacing after 'Gna!' in the manual.
        * The 'grace.write()' user function now plots the associated errors. (bug #5659)
        * Fix to the parameter errors not being scaled in the value.read() user function. (bug #5670)
        * Parameter errors were not always included in the results file. (bug #5660)
        * Removed the memory leak in the relaxation curve-fitting C modules. (bug #5602)
        * The user function 'value.set()' no longer raises RelaxError in spectral density mapping runs. (bug #5698)
        * Fix to the broken Molmol pipe. (bug #5752)
        * Fix of the failure of molmol.view() when the PDB is missing. (bug #5753)
        * Fix to the failure of relax_data.read() when relaxation data is missing. (bug #5805)
