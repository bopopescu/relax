Version 1.3.4
(12 August 2009, from /1.3)
http://svn.gna.org/svn/relax/tags/1.3.4

    Features:
        * The file format of peak intensity lists is now automatically detected (supporting Sparky, XEasy and NMRView).
        * Initial support for a generically formatted peak intensity file (note, this is not yet usable).
        * Error analysis for peak intensities is significantly improved with support for baseplane RMSD, a subset of spectra replicated, and all spectra replicated for both peak heights and peak volumes.
        * NOESY distance restraints (in Xplor or generic format) can now be used in the N-state model via the noe.read_restraints() user function.
        * Psuedo atoms/spin containers are now supported via the spin.create_pseudo() user function (used for the NOE distance restraints).
        * Support for multiple molecules and/or multiple models within relax.
        * Multiple molecules (as one or more PDB files) can now be read in as individual molecules of different models.
        * Multiple models (as one or more PDB files) can now be read in as multiple molecules of the same model.
        * The internal PDB writer can now generate a file with multiple molecules and multiple models.
        * The N-state model with fixed and equal probabilities is now supported.
        * The bond length values for RDCs are now hard-coded (from Ottiger, M. and Bax A., J. Am. Chem. Soc. (1998), 120, 12334-12341).
        * Added the Bruker ncproc parameter to handle Topspin's integer scaling of FID intensities (to the spectrum.read_intensities() user function).
        * Hybridisation support, present in relax 1.2, has returned allowing data pipes to be merged (i.e. to hybridise two model-free data pipes with a different diffusion tensor for sets of spins).
        * The initial code for relaxation dispersion analyses has been added (note, this is not yet usable).
        * Initial support for the new Frame Order theories, using the isotropic cone model for RDC data of domain dynamics.
        * MOLMOL macro support for plotting model-free parameter values onto the structure has returned.

    Changes:
        * The XH bond vector distribution PDB and Pymol representation is now restored.
        * The new user function class 'spectrum' contains all functions associated with spectral data.
        * Spectral data is now identified by unique spectrum ID strings.
        * The noe.read() and relax_fit.read() user functions have been merged into spectrum.read_intensities().
        * The relax_fit.mean_and_error() user function is now called spectrum.error_analysis().
        * The noe.error() user function is now called spectrum.baseplane_rmsd().
        * The new spectrum.integration_points() user function is used to specify the number of points used in a volume integration.
        * The R1 and R2 relaxation time period is now specified using relax_fit.relax_time().
        * grace.write() will now show a warning when an empty file is being created.
        * Replicated spectra are now specified explicitly via spectrum.replicated().
        * Extensive code base clean up - including formatting, unused imports, comments, typos, etc.
        * Complete redesign of the structural information storage.
        * Massive speed up of the structure.vectors() user function.
        * More element types of standard protein PDB atom names are identified (to support PDB files with a blank element column).
        * Information is now printed out when reading RDCs and PCSs to aid the user identify usage faults.
        * The RDC and PCS data is now checked before being loaded into relax.
        * The N-state model grid search now handles alignment tensor parameters.
        * For better optimisation, the grid search lower bound for alignment tensor elements has changed from 0 to -1e-3.
        * Improvement to the algorithm for determining attached atoms in the internal PDB reader - a 2 rather than 1 Angstrom radius sphere is now being searched.
        * The molecule.name() user function can now name unnamed molecules.
        * The diagonalised alignment tensor is now created.
        * Spin numbers can now be set to None, adding support for polymers where the atom name rather than number is used.
        * The Q factor is now calculated as Clore's R-factor divided by N, matching the Pales default mode (both Q factors are now calculated and stored).
        * The force flag has been introduced to the mol/res/spin naming and numbering user functions, where the default is now not to overwrite.
        * Redesign of the spin.create() and residue.create() user functions - respectively residue and molecule names and numbers are used instead of the res_id and mol_id arguments, allowing residues and molecules to be created as needed.
        * Modified the full_analysis.py script to perform 500 Monte Carlo simulations and turned on automatic looping.
        * Support for non-identical sequences in different PDB files within the same data pipe (only as different molecules, not different models).
        * Modified the structure.vectors() user function to fail if no vectors are found, saving the user a lot of sanity when fixing a non-functional script.
        * A quadratic, flat-bottomed well potential has been added for the NOE distance restraints.
        * For the N-state model, a default of inverse sixth power averaging of NOE distance restraints is being performed.
        * The pcs.centre() user function can now accept pseudo-atoms.
        * The pcs.centre() user function can now handle multiple paramagnetic centres.
        * The new maths_fns.rotation_matrix.R_axis_angle() function generates a rotation matrix from the axis-angle notation.
        * The new maths_fns.rotation_matrix.random_rot_axis() and maths_fns.rotation_matrix.R_random_axis() functions are used to generate random rotation matrices.
        * The new maths_fns.rotation_matrix.R_random_hypersphere() function generates a pure random rotation matrix.
        * The new maths_fns.rotation_matrix.quaternion_to_R() function generates a rotation matrix from a quaternion.
        * The new maths_fns.kronecker_product.kron_prod() function is used to calculate the Kronecker product.
        * Converted the user function n_state_model.set_type() to align_tensor.reduction().
        * Renamed n_state_model.set_domain() to align_tensor.set_domain().
        * The statistics ordering has been improved when profiling.
        * align_tensor.init() can now accept any type of float or int (python or numpy).
        * Removed the checks to see if the RDC or PCS data is already loaded, allowing sequential loading by a few calls to rdc.read() and pcs.read().
        * Large improvements to the information printed by the align_tensor.display() user function.
        * Removed a check for the presence of the alignment tensor so that align_tensor.init() can be used to reset the tensor values.
        * Created the six transpose functions for rank-4, 3D tensors in maths_fns.kronecker_product.transpose_ij().

    Bugfixes:
        * A bug in the Monte Carlo simulations for relaxation curve-fitting has been fixed (bug #12670).
        * Fixes for the Pymol PDB file opening and pymol.cartoon() user function.
        * The molecular centre of mass is now correctly calculated.
        * Grace plots (http://plasma-gate.weizmann.ac.il/Grace/) were sometimes corrupted due to data being stored in numpy arrays and not Python lists (bug #12679).
        * Fix for the value.read() user function, the directory and 'sep' arguments were being ignored.
        * Multiple failures of structure.load_spins() for different PDB file layouts have been fixed (bug #12735).
        * Model-free optimisation failures on Mac OS X for PowerPC (bug #12573).
        * Many PDB file reading fixes for different multi-molecule/multi-model formats.
        * The '-' character is now allowed in molecule, residue, and spin names (was a bug if the file name contains a '-' character).
        * Bug fixes for handling molecules other than proteins and RNA via the Scientific python PDB reader.
        * The internal PDB reader no longer considers the END record to be a molecule.
        * Fix for a rare circular import failure of the RelaxError and RelaxWarning systems when running with the --debug command line flag.
        * Significant simplifications of the RelaxError system, fixing a state saving bug with --debug.
        * Fix for the retarded Scientific python PDB reader splitting a perfectly good molecule into 2 when it can't recognise a residue type.
        * Linear constraints and now supported for the N-state models without probabilities.
        * Modified the full_analysis.py script to name spins if the sequence data contains no spin name info.
        * All column arguments now default to None for the RDC and PCS reading so if residue numbers are non-existent, then they will not be read from the default column.
        * Bug fixes for the N-state model with N = 1 (allowing relax to mimic Pales http://www.mpibpc.mpg.de/groups/griesinger/zweckstetter/_links/software_pales.htm).
        * Bug fix for the PCS alignment tensor fitting, the paramagnetic-nuclear spin distance was being incorrectly determined.
        * The Q factors for the RDCs and PCSs were completely incorrect (found by comparing to Pales).
        * All the value.*() user functions have now been converted from the relax 1.2 to the relax 1.3 design.
        * Fixes for some circular import issues in generic_fns.minimise and generic_fns.value.
        * All the relax_data.*() user functions have now been converted to the relax 1.3 design.
        * Bug fix for the spin.copy() user function, non-empty spin containers are no longer overwritten if the name and num are set to None.
        * Fix for the latex_mf_table.py sample script (bug #13163).
        * Rex values in XML results file not in s-1 (bug #13162).
        * Fix for the structure.create_diff_tensor_pdb() user function which was creating weird shaped ellipsoid diffusion tensor representations when 'alpha' and 'beta' were unequal (bug #13032).
        * Sparky assignments such as '004N-H' are now handled.
        * Fixed a bad apostrophe character causing the 'full_analysis.py' script to fail.
        * Removed a check disallowing multiple steady-state NOE data sets at the same spectrometer frequency.
        * Bug fix for the results reading from_xml() method, the molecule name was being evaluated causing results.read() to fail.
        * Fixes for the model-free Monte Carlo simulation methods for deselected spins.
        * Models with high te values (>200 ns) were not being eliminated in the full_analysis.py sample script (bug #13259).
        * Monte Carlo simulations were failing in the model-free.py sample script (bug #13442).
        * The model-free minimisation statistics are no longer reset by the Monte Carlo simulation setup.
        * A number of bug fixes for Python 2.6 support.
        * Model selection between data pipes of different type is now allowed.
        * Bug fix for the maths_fns.rotation_matrix.R_2vect() function as the rotation axis is not always of unit length.
        * The diffusion tensor geometric object PDB representation is now correctly generated.
        * The isotropic cone geometric object PDB representation is now correctly generated.
        * The Hetrogen section was failing with MC simulations in the structure.write_pdb() user function.
        * pymol.cartoon() was failing when multiple proteins were loaded.
        * Bug fix for the maths_fns.rotation_matrix.R_to_axis_angle() function, the axis needs to be normalised.
        * Bug fixes for the grace.write() user function.
        * Monte Carlo simulations failed when all parameters except for the diffusion tensor were fixed.
        * The diffusion and alignment tensor *_sim and *_err elements are now present and read from a results file.
        * The align_tensor.matrix_angles() user function now avoids NaN problems through arccos of numbers > 1.
        * Bug fixes for the updating of the diffusion tensor MC simulation data structures.
        * Fix for the copying of diffusion tensors data structures.
        * relax and the sample scripts are more compatible with non-Unix operating systems by using the Python os.sep and os.pardir rather than '/' and '..' for directory separators and the parent directory.
        * Caught a NaN problem in the N-state model, RDC Q factor code causing failures in MS Windows.



Version 1.3.3
(29 November 2008, from /1.3)
http://svn.gna.org/svn/relax/tags/1.3.3

    Features:
        * Dasha can be run from within relax again.
        * Art Palmer's Modelfree can be run from within relax again.
        * OpenDX execution and control is once again supported.
        * NMRView peak lists are now supported.
        * XEasy peak lists are again supported.

    Changes:
        * Internal relax cleanups by the addition of the specific model_loop() method - this should eliminate a series of potential hidden bugs.
        * The results.write() and results.display() now only support XML output.
        * More information is now extracted from the Modelfree mfout files.
        * The version of the Modelfree program is checked and if it is an old, buggy version, relax will refuse to execute it.
        * The system tests can now handle the sometimes large differences in Modelfree results between the GNU gcc and Portland C compiler versions.
        * Fixes and improvements to much of the API documentation.

    Bugfixes:
        * A failure of the minimisation set() function has been fixed.
        * The reset() user function now works again.
        * Fixes to the relax data store methods add(), to_xml() and from_xml().
        * Many fixes for the support of Art Palmer's Modelfree program.
        * The mapping of the global parameter space (diffusion tensor, etc.) for visualisation in OpenDX has been fixed.
        * state.save() no longer fails after running state.load() (bug #12437).
        * Sparky peak lists with the assignment '?-?' are now handled properly (bug #11913).
        * Error analysis in relaxation curve-fitting was incorrectly implemented with standard deviation rather than variance averaging (bug #12456).
        * A number of fixes for the LaTeX table generating sample script.
        * Fixes for the teeing and logging via the -l and -t command line arguments (bug #12489).
        * Fix for when XH bond vector data from a PDB file is missing for a spin system (bug #12487).
        * Many fixes for when structural data is missing.
        * The relax script is no longer overwritten if the log or tee file is not specified on the command line (bug #12498).
        * Missing RelaxError failure in the sequence handling code (found when trying to solve bug #12582).
        * A failure in the results.write() user function has been fixed (bug #12582).
        * Model selection no longer fails if no model is ever selected.
        * Model selection was failing if spins were deselected (bug #12591).
        * The directory name can now be part of the file name argument to results.read() (bug #12588).
        * Optimisation of only the diffusion tensor after calling fix() was failing if some spins were deselected (bug #12607).
        * The internal PDB reader was failing when the PDB file contained CONECT records (bug #12637).



Version 1.3.2
(8 October 2008, from /1.3)
http://svn.gna.org/svn/relax/tags/1.3.2

    Features:
        * The NOE analysis has been converted to the new design and is fully functional again.

    Changes:
        * Internal abstractions to the relax data store by using the generic_fns.pipes API.
        * Added more literature references to the 'full_analysis.py' script.
        * Eliminated Monte Carlo simulations are better identified during user function execution.

    Bugfixes:
        * The generation of the cone geometric object for the N-state model is fixed.
        * Fixes for the relax_curve_diff.py and latex_mf_table.py sample scripts (identified by the relax data store abstraction).
        * Fixed the reading of relax 1.2 model-free results files (identified by the relax data store abstraction).
        * Various PDB file loading issues fixed.
        * value.set() no longer fails when the parameter being set already exists (bug #12406).
        * Fix for the bug whereby model elimination does nothing for model-free models.  This fix may solve other model-free related issues (bug #12407).
        * Model elimination no longer fails when no diffusion tensor is loaded (bug #12408).
        * The error when loading the PDB file through the reading of the results file in the 'final' stage of the 'full_analysis.py' sample script is fixed (bug # 12409).
        * Model elimination is fixed in the 'full_analysis.py' script.
        * The fix() user function works again when the element argument is set to 'all'.
        * Fix for the duplication of sequence data during model selection.
        * Monte Carlo simulations were failing due to a missing sequence error (bug #12410).
        * The model elimination error "AttributeError: 'SpinContainer' object has no attribute 'params'." has been fixed (bug #12411).
        * A missing global chi-squared value was causing failure of global model selection (bug #12412).
        * Monte Carlo simulation elimination was removing the simulation not from the affected spin but from all spins (bug #12416).
        * Fix for the failure of the value.write() user function in all analysis types (bug #12418).



Version 1.3.1
(28 September 2008, from /1.3)
http://svn.gna.org/svn/relax/tags/1.3.1

    Features:
        * Complete redesign of relax (https://mail.gna.org/public/relax-devel/2006-10/msg00053.html).
        * Extension of the Grace plotting abilities to include series data such as relaxation exponential curves.
        * For easy reference, all physical constants have been shifted to the 'physical_constants.py' module.
        * Complete overhaul of the handling of structures with the introduction of a structural object API.
        * An internal structural object has been created, complete with PDB reading and writing methods, to optionally replace the Scientific python PDB object.
        * Large improvements to the API documentation by the use of epydoc formatted docstrings.
        * All spins can be looped over simply by using the spin_loop() generator function.
        * Molecules, residues, and spins are now selected by the new syntax of the spin identification string.
        * Improvements and simplifications to the 'full_analysis.py' script with all user modifiable variables shifted to the top of the script as global variables.
        * Automatic looping until convergence has been added to the 'full_analysis.py' script to further simplify usage.
        * Setting the type of nucleus is now done with the value.set() user function on a spin-by-spin basis.  This is important for RNA, small molecules and protein analyses with Ca and N data.
        * A new analysis type, the N-state model for interpreting domain motions using RDC and PCS data, is now supported.
        * The mechanical pivot-CoM analysis of the N-state model and associated cone image construction is included.
        * The consistency testing code has been ported from the 1.2 line.
        * The results file has been converted to the versatile XML format.
        * All analysis types, present and future, are automatically supported through the reading and writing of the XML results file.
        * The XML results file stores floats at full 64 bit precision in an XML attribute using the IEEE-754 byte array.

    Changes:
        * The RelaxError and RelaxWarning systems have been redesigned.  The objects are no longer placed into __builtin__ but must now be imported.
        * The unit and system test frameworks have been expanded to 1046 and 55 tests respectively covering most aspects of relax usage.
        * The inclusion of headers in the sample scripts to identify the author and age of the script.
        * Conversion of the relax data storage object into a singleton.  Rather than accessing 'self.relax.data', the singleton is now imported as needed.
        * Unit tests can now be run individually.
        * The optimisation code has been spun out into its own project, minfx (https://gna.org/projects/minfx/).  This is now a dependency.
        * The Boolean values True and False are now used instead of 1 and 0 for user function arguments.
        * The class methods of the 'generic_fns' package have been converted to module functions for greater API flexibility.
        * Complete redesign of the diffusion tensor object in the relax data store.  Many diffusion tensor attributes are calculated on the fly when accessed.
        * The 'specific_fns' package has been redesigned with the API for retrieving analysis specific methods tidied up.
        * The inevitable switch from Numeric python to numpy has occurred.
        * The system tests and unit tests can be run separately.
        * All STDOUT and STDERR output is caught by the test suite and only printed if the test fails.
        * The system tests use the unit test framework to significantly simplify the addition of new tests.
        * User scripts can now be used directly as system tests.
        * All threading code has been eliminated in preparation for replacement by the multi_processor code.
        * The precision of the 15N gyromagnetic ratio input into Art Palmer's Modelfree4 program has been increased.
        * Scientific python is no longer an essential dependency.
        * The 'unselect' user function class has been renamed to 'deselect'.
        * Big updates to the relax manual.
        * PDB files can be specified without the '.pdb' ending.

    Bugfixes:
        * The unit test and system test frameworks are now functional.
        * The failure of reduced spectral density mapping has been identified and fixed (bug #9238, bug #9562).
        * The second set of extended model-free formulae were accessing undefined functions (bug #9189).
        * Docstring fetching issues with Python 2.5 have been fixed (bug #9390).
        * The sample script for placing model-free results into a LaTeX table now works (bug #10189).
        * The default parameter values for relaxation curve fitting were incorrectly set.
        * Security:  Replaced the insecure os.tempnam() with tempfile.mktemp().
        * ZeroDivisionError fix for model elimination and Monte Carlo simulation elimination (bug #11004).
        * The handling of spins with missing XH bond vectors has been fixed (bug #11378).
        * The relax_data.display() user function is now functional again (bug #11383).
        * MS Windows with Python 2.5 is now supported.



Version 1.3.0
(19 February 2007, from /1.3)
http://svn.gna.org/svn/relax/tags/1.3.0

    Features:
        * Implementation of the PDB geometric representation of the Brownian rotational diffusion tensor using 'structure.create_diff_tensor_pdb()'.
        * Added a sample script for the creation of the PDB representation of the diffusion tensor.
        * Addition of the ability to calculate the centre of mass of the selected residues (not available as a user function).
        * The addition of PDB writing capabilities (not available as a user function).
        * Creation of the 'molmol.command()' user function to send Molmol commands to a running instance of Molmol.
        * Creation of the 'molmol.ribbon()' user function to apply the Molmol ribbon style (which is equivalent to clicking on 'ribbon' in the Molmol side menu).
        * Creation of the 'molmol.tensor_pdb()' user function for displaying the PDB geometric object of the diffusion tensor in Molmol over a loaded structure.
        * Preliminary support for PyMOL.
        * Creation of the 'pymol.view()' user function for launching PyMOL.
        * Creation of the 'pymol.cartoon()' user function for hiding everything, showing the cartoon representation, and colouring the cartoon by secondary structure.
        * Creation of the 'pymol.tensor_pdb()' user function, the equivalent of 'molmol.tensor_pdb()'.
        * A unit test framework for the test suite has been created and a few tests have been written (accessible through the --test-suite or --unit-test command line arguments).
        * Addition of the 'structure.create_vector_dist()' user function for creating a PDB representation of the XH bond vectors of selected residues from the structure.
        * Addition of the 'pymol.vector_dist()' user function for displaying the PDB representation of the XH vector distribution overlain over the structure within PyMOL.

    Changes:
        * The unmodified Hessian and turning the line search off are now specified by different regular expressions. (see task #3630)
        * Splitting of the 'pdb()' user function into 'pdb.read()' and 'pdb.vectors()' (these have been subsequently renamed). (see task #3838)
        * Created the JOBS file to describe the roles of the relax manager positions.
        * Removal of apply(func, args) calls from the minimisation code.
        * Addition of the io.file_root() function.
        * Addition of the RelaxImplementError for internal use.
        * Added the text "re-run relax with the '--debug' flag" to the RelaxFault error class.
        * Redesign of the diffusion tensor data structure 'self.relax.data.diff' for the automatic calculation of diffusion tensor parameters, vectors, and matrices when parameters are set or changed.
        * The 'pdb' user function class has been renamed to 'structure'.
        * The 'init_data()' user function has been renamed to 'reset()'.

    Bugfixes:
        * Fixed the selection of nucleic acids by name as Scientific python was prefixing 'R' to the single letter codes.



Version 1.2.14
(9 August 2008, from /1.2)
http://svn.gna.org/svn/relax/tags/1.2.14

    Changes:
        * Improvements to the relax manual.
        * Copyright statements added to the sample scripts for identifying the author and date of the script.

    Bugfixes:
        * The C modules can now be compiled on Windows with Python 2.5.
        * Fixes for the calculation of the F_eta value in the consistency testing analysis.



Version 1.2.13
(19 April 2008, from /1.2)
http://svn.gna.org/svn/relax/tags/1.2.13

    Features:
        * Consistency testing has been added allowing datasets recorded at different magnetic fields to be checked using the consistency function values J(0), Feta, and FR2.
        * The 'full_analysis.py' script can now perform a model-free analysis in the absence of structural data.

    Changes:
        * Better support for MS Windows Vista in the scons build system and the relax introduction.
        * A file listing the unresolved residues is no longer necessary for running the 'full_analysis.py' script.
        * A few small documentation additions and fixes.

    Bugfixes:
        * The parameters Dpar and Dper are now properly checked upon initialisation of this spheroidal diffusion tensor.
        * Initialisation of an empty diffusion tensor to the default values of zero now works.
        * The default value of the Iinf relaxation curve fitting parameter can now be set.
        * Fix for the complete failure of the reading in of Art Palmer's Modelfree 4 'mfout' results file (see bug #8997).
        * Fix for a rare ZeroDivisionError during Monte Carlo simulations (see bug #11004).
        * relax no longer fails if XH bond vectors cannot be extracted from a PDB file (see bug #11378).
        * The relax_data.display() user function no longer fails (see bug #11383).
        * The selection of model-free model 'm0' causes Monte Carlo simulations to fail resulting in zero errors from that residue onwards (see bug #11476).
        * Another column fusion bug in Modelfree 4's 'mfout' results file can be handled (see bug #11483).
        * Optimisation fix - the steady-state NOE value, gradient, and Hessian is now properly calculated when an order parameter of exactly 0.0 is encountered.



Version 1.2.12
(17 November 2007, from /1.2)
http://svn.gna.org/svn/relax/tags/1.2.12

    Features:
        N/A

    Changes:
        N/A

    Bugfixes:
        * The 'latex_mf_table.py' sample script now works (see bug #10189).
        * The missing 'num_ri' failure when writing the model-free and J(w) mapping results files has been solved (see bug #10323).
        * Model elimination was failing in certain situations when applied to the global models (see bug #10320).



Version 1.2.11
(21 October 2007, from /1.2)
http://svn.gna.org/svn/relax/tags/1.2.11

    Features:
        * The Grace plotting abilities have been extended, especially concerning relaxation exponential curve-fitting.
        * A sample script has been added to plot the difference between the measured and back calculated peak intensities.
        * Automatic looping over iterations in the 'full_analysis.py' sample script is now possible.

    Changes:
        * The 'full_analysis.py' sample script has been significantly improved with all user modifiable options shifted to the top of the script.
        * The default CSA value is now -172 ppm.

    Bugfixes:
        * The previous release had problems reading results files from relax versions 1.2.0 to 1.2.9, but now results files from all versions can be read (see bug #8248).
        * The synopsis of the system/functional tests now says '[ Failed ]' if one the tests fails (see bug #8682).
        * relax now works with Python 2.5 (see bug #9093).
        * The writing of the model-free results file, which failed under certain circumstances because of the 'heteronuc' and 'proton' attributes, has been fixed (see bug #8996).
        * The problem whereby there is data loss for deselected residues when using 'results.write()' followed by 'results.read()' has been resolved (see bug #8953).
        * Relaxation data can now be read if deselected spin systems have a relaxation data value or error value set to 'None' (see bug #9101).
        * The fatal bug of the reduced spectral density mapping values being incorrectly calculated has been fixed (see bug #9238).
        * When using the alternate model-free parameter set {S2f, tf, S2s, ts}, the incorrect functions were being called (see bug #9189).
        * A second fatal problem in the reduced spectral density mapping code, the heteronuclear frequency being overwritten by that of the proton, has been fixed (see bug #9259).
        * Another problem with relax and Python 2.5, because of the Scientific package, has been resolved (see bug #9390).
        * The XH bond length is now correctly set in the reduced spectral density mapping analysis (see bug #9562).
        * The convergence test in the 'full_analysis.py' sample script was failing if spin systems were deselected (see bug #9892 and bug #10022).



Version 1.2.10
(12 January 2007, from /1.2)
http://svn.gna.org/svn/relax/tags/1.2.10

    Features:
        * Addition of tests to the 'full_analysis.py' script for the identification of convergence.
        * Different columns can be specified for the residue number in the 'select.read()' and 'unselect.read()' user functions.
        * More advanced selection of spin systems or residues is possible through the use of the Boolean operators 'OR', 'NOR', 'AND', 'NAND', 'XOR', or 'XNOR'.
        * Addition of a sample script for the creation a LaTeX longtable of the model-free results.
        * The rows of the model-free and reduced spectral density results files are no longer truncated for deselected spin systems, hence all data is now stored in the results file. (see bug #8059)

    Changes:
        * The relax core design diagram in the development chapter of the manual has been updated.
        * Three flow diagrams have been added to the relax manual detailing the steps of different model-free analysis protocols.
        * Spin systems are now identified when deselected by the 'eliminate()' user function.
        * The model-free Molmol cutoff for fast and slow motions has been changed from 100 to 200 ps.
        * For the clarification of bug #8059 a RelaxNoTensorError is raised instead of returning None when no diffusion tensor data is present.
        * The Scons target 'source_dist' now creates and GPG signs both the 'tar.bz2' and 'zip' source distribution packages. (see task #4087)

    Bugfixes:
        * The C modules can now be compiled on Mac OS X. (see bug #7670)
        * The order of the proton and heteronucleus dimensions and number of header lines in the XEasy text file is now automatically detected. (see bug #7676)
        * The 'full_analysis.py' script now throws a RelaxError if only one round of optimisation of the global model has been executed. (see bug #7787)
        * The model selection of the global model in the 'full_analysis.py' script has been fixed. (see bug #7863)
        * Monte Carlo simulations no longer fail if the local tm global model has been selected in the 'full_analysis.py' script. (see bug #7875)
        * The Monte Carlo simulation data in the model-free results file is now correctly read back into the program. (see bug #7755)
        * The Monte Carlo simulation state used to be turned on after reading a results file containing simulations. (see bug #7890)
        * After reading model-free results files, model selection would fail as the heteronucleus and proton data structures did not exist. (see bug #7891)
        * The model-free Molmol fast correlation time macro (te < 100 ps and tf) no longer sets the bond length to zero when no parameter is present.
        * The docstring fetching Scons target no longer fails. (see bug #8182)
        * The model-free 'S2 difference stored in a new run' test of the test suite now passes. (see bug #8183)
        * The 'source_dist' Scons target now works on MS Windows. (see bug #7678)
        * The MS Windows BAT file execution failure "python: can't open file 'C:\Program': [Errno 2] No such file or directory" has been fixed. (see bug #8201)
        * The reading in of the results files from relax versions 1.2.0 to 1.2.9 in which deselected spin system lines are truncated now works. (see bug #8248)



Version 1.2.9
(9 November 2006, from /1.2)
http://svn.gna.org/svn/relax/tags/1.2.9

    Features:
        N/A

    Changes:
        * For Mac OS X compatibility, the interpreter has been changed from '/usr/bin/python' to '/usr/bin/env python'.

    Bugfixes:
        * The infinite chi-squared RelaxError when the chi-squared value is zero has been fixed. (see bug #7641)
        * Profiling is now functional again. (see bug #7677)



Version 1.2.8
(4 November 2006, from /1.2)
http://svn.gna.org/svn/relax/tags/1.2.8

    Features:
        * Preliminary support for RNA/DNA. (bug #7241)
        * Significant improvements to the SCons build system (see 'scons --help').
        * Expansion and improvement of the relax development chapter.
        * The grace.write() user function works with reduced spectral density mapping. (task #4002)

    Changes:
        * MS Windows installation instructions have been added to the manual.
        * The RelaxWarning system has been added to standardise warning messages.
        * The relax manual now describes the test suite. (task #3781)
        * The 15N CSA values in the sample scripts are now all -172 ppm.
        * The ambiguity cased by supplying the option 'None' together with Newton optimisation has been resolved in the documentation. (task #3630)
        * Optimisation tests have been added to the test suite.

    Bugfixes:
        * Model selection between the global diffusion models no longer fails if all residues of the local tm models have been deselected by model elimination. (bug #7192)
        * The 'angles.py' sample script no longer fails when residue specific relaxation data is missing (corrupt input data). (bug #7224)
        * Prior to executing Modelfree4, Dasha, Molmol, Grace, or OpenDX, tests are run to determine if the binary exists, is executable, and is in the system path. (bug #7225)
        * Model elimination when using the model-free model 'm0' no longer fails. (bug #7226)
        * The strict checking of the Da and Dr diffusion tensor parameters has been relaxed to allow for optimisation imprecision. (bug #7297)
        * The reading of Modelfree4 mfout results files no longer fails when residue specific relaxation data is missing (corrupt input data). (bug #7277)
        * If optimisation returns an infinite value or a NaN value, these are now caught and a RelaxError thrown. (bug #6503, task #3621)
        * The sigma(NOE) equations of Chapter 8 of the manual have been fixed. (bug #7402)
        * Files containing relaxation data not consisting of exactly 4 columns will now be read. (bug #7583)
        * Model-free results files from relax versions prior to 1.2.5 are now properly read. (bug #7587)
        * Model selection between the global diffusion models does not fail when the local tm models are included. (bug #7616)



Version 1.2.7
(18 September 2006, from /1.2)
http://svn.gna.org/svn/relax/tags/1.2.7

    Features:
        * The C modules now compile without problem on MS Windows.
        * The MS Windows binary distribution packages are now successfully built using the SCons build system.
        * The batch file 'relax.bat' has been created for running relax from the MS Windows command prompt.
        * The program introduction width is now 80 characters in MS Windows for proper display from the command prompt.

    Changes:
        * The program state is saved when a RelaxError occurs in debugging mode.
        * KeyboardInterupt during script execution in debugging mode will print the Python traceback.

    Bugfixes:
        * The sconstruct script no longer fails in MS Windows. (bug #6980)
        * Model selection is now functional on all operating systems. (bug #6873).
        * The use of the Unix only class 'Popen3' has been removed to allow relax to function on all non-Unix operating systems. (bug #6841)
        * If the XH bond vector length is 0, the vector is set to None rather than raising a RelaxError. (partial fix to bug #6503)
        * Fix for the sconstruct script failure on MS Windows due to ImportErrors caused by importing Unix specific code. (bug #6841)
        * Fix for ImportErrors in MS Windows preventing relax from running. (bug #6841)



Version 1.2.6
(21 July 2006, from /1.2)
http://svn.gna.org/svn/relax/tags/1.2.6

    Features:
        N/A

    Changes:
        N/A

    Bugfixes:
        * Added the missing PDB file used by one of the OpenDX tests of the relax test-suite. (bug #6404)
        * Fixed the fatal devnull import failure for Python versions < 2.4. (bug #6403)



Version 1.2.5
(20 July 2006, from /1.2)
http://svn.gna.org/svn/relax/tags/1.2.5

    Features:
        * The data analysis chapter has been split into four:  The NOE, relaxation curve-fitting, model-free, and reduced spectral density mapping chapters.
        * A section called the 'The core design of relax' has been added to the the development chapter of the manual.
        * The 'Values, gradients, and Hessians' chapter of the manual is now complete.  These are all the equations used during optimisation.
        * The Hessian kite diagram and the gradient construction diagram have been added to the 'Values, gradients, and Hessians' chapter of the manual.

    Changes:
        * The distribution archives now unpack to the directory 'relax-x.x.x' rather than just 'relax', where x.x.x is the version number.
        * All chapters of the manual have been edited and proofed.
        * The Sparky and XEasy peak intensity reading functions have been split to allow the easy addition of new peak intensity file types.
        * Test of AIC model selection between diffusion tensors added to the test suite.  (To catch bug #5746)
        * Changing of the local tm parameter name of 'tm' to 'local_tm' to distinguish it from the global tumbling time 'tm'. (Preparation for fixing bug #6384)

    Bugfixes:
        * Fix of bug where self.relax.data.select_sim was treated as a list. (bug #5977)
        * The value.copy() function now handles the value of None. (bug #6288)
        * The global flag is now set by the relax_data.delete() function. (bug #6383)
        * The model-free model_statistics() function now tests for the presence of relaxation data. (bug #5806)
        * Sorting of global from local parameters in 'generic_fns/value.py' simplified and fixed by changing the parameter name 'tm' to 'local_tm'. (bug #6384)
        * Model-free parameters now set in the OpenDX mapping test of the test-suite. (bug #6388)
        * Failure of model elimination because of a 'local_tm' and 'tm' mix up. (bug #6389)
        * Modification of the model-free calculate() function and elimination of the 'combined' flag from the self.model_statistics() function. (bug #5746)



Version 1.2.4
(2 May 2006, from /1.2)
http://svn.gna.org/svn/relax/tags/1.2.4

    Features:
        * Added elimination of Monte Carlo simulations to the sample scripts.
        * Creation of the relax test suite 'relax --test-suite'.
        * Creation of the committers file.
        * The hyperref LaTeX package is now used in the relax manual.
        * Addition of a chapter called 'Open source infrastructure'.
        * Rewrite of the 'Development of relax' chapter.
        * Addition of the user function 'run.hybridise()'. (task #3122)
        * The user function 'relax_data.read()' no longer deselects residues when no data is encountered. (bug #5501)
        * Residues are deselected by the user functions 'grid_search()', 'calc()', and 'minimise()' if k > n or if there is less than 3 data sets. (bug #5501)
        * Mapping parameter values onto the structure through Molmol macros. (task #3146)
        * Added support for arbitrary colour gradients in the Molmol macros. (task #3146)
        * Addition of a file for colour operations.  All X11 colours and all Molmol colours can be selected by name. (task #3146)

    Changes:
        * The 'full_analysis.py' sample script now only searches over 6^6 rather than 11^6 grid points for the ellipsoid diffusion tensor to speed up the analysis.
        * Updated the manual to replace the references to 'make' with 'sconstruct'.
        * Extension of the installation chapter.
        * Changed the square and round brackets to curly brackets and replaced ':' with '=' in the user function docstrings.
        * All the model-free Molmol functions have been moved into their own class Molmol.
        * The null device can now be opened instead of a file for writing by passing 'devnull' as the name.
        * Updated the release checklist so that the directory 'relax-x.x.x' is included in the distributions rather than just 'relax'.
        * Removed the bugs file 'docs/BUGS'.

    Bugfixes:
        * Small bugs in the sconstruct script have been removed.
        * The value reading function can now handle rows which contain no data.
        * The ellipsoid diffusion tensor was being incorrectly initialised in the 'full_analysis.py' script.
        * Another Numeric version issue.  The model m0 with no parameters which used to be handled okay by the grid search and minimisation code was failing due to changes in Numeric.
        * In certain situations, the angle folding function which is called after model-free minimisation used the wrong run name.
        * Fixed the -fPIC option segfault problem on some Linux systems. (bug #5473)
        * Changed the tm grid search which was between 6-12 ns to be between 1-12ns.
        * Fixed some grammar in the intro chapter of the manual.
        * Fixed a bug in the model-free sample script in the spheroid diffusion tensor function.
        * Removed the spaces in front of the \index{} commands from the manual LaTeX source files.
        * The diffusion parameters 'Diso', 'Dper', 'Dpar', 'Dratio', 'Dx', 'Dy', and 'Dz' are generated on the fly. (bug #5559)
        * Fixed the spacing after 'Gna!' in the manual.
        * The 'grace.write()' user function now plots the associated errors. (bug #5659)
        * Fix to the parameter errors not being scaled in the value.read() user function. (bug #5670)
        * Parameter errors were not always included in the results file. (bug #5660)
        * Removed the memory leak in the relaxation curve-fitting C modules. (bug #5602)
        * The user function 'value.set()' no longer raises RelaxError in spectral density mapping runs. (bug #5698)
        * Fix to the broken Molmol pipe. (bug #5752)
        * Fix of the failure of molmol.view() when the PDB is missing. (bug #5753)
        * Fix to the failure of relax_data.read() when relaxation data is missing. (bug #5805)
