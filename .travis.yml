###############################################################################
#                                                                             #
# Copyright (C) 2019 Troels Schwarz-Linnet                                    #
# Copyright (C) 2019 Edward d'Auvergne                                        #
#                                                                             #
# This file is part of the program relax (http://www.nmr-relax.com).          #
#                                                                             #
# This program is free software: you can redistribute it and/or modify        #
# it under the terms of the GNU General Public License as published by        #
# the Free Software Foundation, either version 3 of the License, or           #
# (at your option) any later version.                                         #
#                                                                             #
# This program is distributed in the hope that it will be useful,             #
# but WITHOUT ANY WARRANTY; without even the implied warranty of              #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               #
# GNU General Public License for more details.                                #
#                                                                             #
# You should have received a copy of the GNU General Public License           #
# along with this program.  If not, see <http://www.gnu.org/licenses/>.       #
#                                                                             #
###############################################################################

language: python
os: linux

addons:
  apt:
    packages:
        - openmpi-bin
        - libopenmpi-dev
        - ssh

env:
  global:
    - MPIRUN=""
    - OLD_PY2_PACKAGES=false
    - PYTHON=""
    - RELAX_ARGS=""
    - WXPYTHON=false

jobs:
  include:
    # MS Windows (10), Python 3.7.
    - name: "MS Windows (10), Python 3.7, single processor, no GUI tests."
      os: windows
      language: shell
      python: "3.7"
      before_install:
        - choco install python3 --version 3.7.4
        - export PATH="/c/Python37:/c/Python37/Scripts:$PATH"
        - python -m pip install --upgrade pip

install:
    # Fail on first error.
    - set -e

    # Find Python.h to build with scons.
    - export PYTHON_INCLUDE_DIR=`python -c 'from distutils import sysconfig; print(sysconfig.get_python_inc())'`

    # Get newer pip and whell for binary caching support.
    - if [[ $TRAVIS_OS_NAME == "linux" ]]; then sudo -H pip install --upgrade pip wheel; fi
    - if [[ $TRAVIS_OS_NAME == "osx" ]]; then sudo -H pip install --upgrade pip wheel; fi

    # Manually install packages for Python 2.7 compatibility.
    - if [[ $OLD_PY2_PACKAGES == "true" ]]; then pip install numpy==1.16.5; else pip install numpy; fi
    - if [[ $OLD_PY2_PACKAGES == "true" ]]; then pip install matplotlib==2.2.4; else pip install matplotlib; fi
    - if [[ $OLD_PY2_PACKAGES == "true" ]]; then pip install scipy==1.2.2; else pip install scipy; fi

    # Install Python packages with pip.
    - pip install -r devel_scripts/travis-ci/requirements.txt

    # Install Python package with pip for running with multiple processors.
    - if [[ $MPIRUN != "" ]]; then pip install mpi4py; fi

    # Install wxPython 3.0 using Conda.
    - if [[ $WXPYTHON == "true" ]]; then conda install -c https://conda.anaconda.org/travis wxpython; fi

    # Compile the C modules.
    - scons

before_script:
    # Debugging printout of environmental variables.
    - echo "OS=$TRAVIS_OS_NAME"
    - echo "VIRTUAL_ENV=$VIRTUAL_ENV"
    - echo "PYTHON_INCLUDE_DIR=$PYTHON_INCLUDE_DIR"
    - echo "MPIRUN=$MPIRUN"
    - echo "OLD_PY2_PACKAGES=$OLD_PY2_PACKAGES"
    - echo "PYTHON=$PYTHON"
    - echo "RELAX_ARGS=$RELAX_ARGS"
    - echo "WXPYTHON=$WXPYTHON"

script:
    # Fail on first error.
    - set -e

    # relax information printout.
    - $MPIRUN $PYTHON ./relax $RELAX_ARGS -i

    # Test suite execution.
    - if [[ $WXPYTHON == "true"  ]]; then $MPIRUN $PYTHON ./relax $RELAX_ARGS --time --test-suite; fi
    - if [[ $WXPYTHON == "false" ]]; then $MPIRUN $PYTHON ./relax $RELAX_ARGS --time --system-tests; fi
    - if [[ $WXPYTHON == "false" ]]; then $MPIRUN $PYTHON ./relax $RELAX_ARGS --time --unit-tests; fi
    - if [[ $WXPYTHON == "false" ]]; then $MPIRUN $PYTHON ./relax $RELAX_ARGS --time --verification-tests; fi

cache: pip

git:
  depth: 10

notifications:
  # https://docs.travis-ci.com/user/notifications/#configuring-email-notifications
  # Pull Request builds do not trigger email notifications.
  email:
    recipients:
      - nmr-relax-devel@lists.sourceforge.net
    on_success: change # default: change (always, never, change)
    on_failure: always # default: always
