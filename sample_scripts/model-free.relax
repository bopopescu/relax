# Script for model-free analysis.
load.sequence('noe.500.out')
load.relax_data('R1', '600', 600.0 * 1e6, 'r1.600.out')
load.relax_data('R2', '600', 600.0 * 1e6, 'r2.600.out')
load.relax_data('NOE', '600', 600.0 * 1e6, 'noe.600.out')
load.relax_data('R1', '500', 500.0 * 1e6, 'r1.500.out')
load.relax_data('R2', '500', 500.0 * 1e6, 'r2.500.out')
load.relax_data('NOE', '500', 500.0 * 1e6, 'noe.500.out')
set_model_selection('AIC')
value_setup.set('bond_length', 1.02 * 1e-10)
value_setup.set('csa', -160 * 1e-6)
diffusion_tensor('iso', 1e-8)
# Set the model
model = 'm5'
select_preset_mf_model(model)
print_all_data()
from Numeric import Float64, array
if model == 'm1':
   self.relax.data.params[0][0] = array([0.5], Float64)
elif model == 'm2':
   self.relax.data.params[0][0] = array([0.5, 100.0 * 1e-12], Float64)
elif model == 'm3':
   self.relax.data.params[0][0] = array([0.5, 0.0], Float64)
elif model == 'm4':
   self.relax.data.params[0][0] = array([0.5, 100.0 * 1e-12, 0.0], Float64)
elif model == 'm5':
   self.relax.data.params[0][0] = array([0.5, 0.5, 100.0 * 1e-12], Float64)

min(model, 'newton', max_iterations=10000, chi2_tol=1e-25)
state.save('save', 1)
